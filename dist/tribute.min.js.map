{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, 'find', {\n    value: function(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this);\n\n      // 2. Let len be ? ToLength(? Get(O, \"length\")).\n      var len = o.length >>> 0;\n\n      // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n      if (typeof predicate !== 'function') {\n        throw TypeError('predicate must be a function');\n      }\n\n      // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      var thisArg = arguments[1];\n\n      // 5. Let k be 0.\n      var k = 0;\n\n      // 6. Repeat, while k < len\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        }\n        // e. Increase k by 1.\n        k++;\n      }\n\n      // 7. Return undefined.\n      return undefined;\n    },\n    configurable: true,\n    writable: true\n  });\n}\n\nif (typeof window !== 'undefined' && typeof window.CustomEvent !== \"function\") {\n  function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    }\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n if (typeof window.Event !== 'undefined') {\n   CustomEvent.prototype = window.Event.prototype\n }\n\n  window.CustomEvent = CustomEvent\n}\n","class TributeEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.events = this;\n  }\n\n  static keys() {\n    return [\n      {\n        key: 9,\n        value: \"TAB\"\n      },\n      {\n        key: 8,\n        value: \"DELETE\"\n      },\n      {\n        key: 13,\n        value: \"ENTER\"\n      },\n      {\n        key: 27,\n        value: \"ESCAPE\"\n      },\n      {\n        key: 32,\n        value: \"SPACE\"\n      },\n      {\n        key: 38,\n        value: \"UP\"\n      },\n      {\n        key: 40,\n        value: \"DOWN\"\n      }\n    ];\n  }\n\n  bind(element) {\n    element.boundKeydown = this.keydown.bind(element, this);\n    element.boundKeyup = this.keyup.bind(element, this);\n    element.boundInput = this.input.bind(element, this);\n\n    element.addEventListener(\"keydown\", element.boundKeydown, true);\n    element.addEventListener(\"keyup\", element.boundKeyup, true);\n    element.addEventListener(\"input\", element.boundInput, true);\n  }\n\n  unbind(element) {\n    element.removeEventListener(\"keydown\", element.boundKeydown, true);\n    element.removeEventListener(\"keyup\", element.boundKeyup, true);\n    element.removeEventListener(\"input\", element.boundInput, true);\n\n    delete element.boundKeydown;\n    delete element.boundKeyup;\n    delete element.boundInput;\n  }\n\n  keydown(instance, event) {\n    if (instance.shouldDeactivate(event)) {\n      instance.tribute.isActive = false;\n      instance.tribute.hideMenu();\n    }\n\n    let element = this;\n    instance.commandEvent = false;\n\n    TributeEvents.keys().forEach(o => {\n      if (o.key === event.keyCode) {\n        instance.commandEvent = true;\n        instance.callbacks()[o.value.toLowerCase()](event, element);\n      }\n    });\n  }\n\n  input(instance, event) {\n    instance.inputEvent = true;\n    instance.keyup.call(this, instance, event);\n  }\n\n  click(instance, event) {\n    console.log(\"click\");\n    let tribute = instance.tribute;\n    console.log(tribute.menu);\n    if (tribute.menu && tribute.menu.contains(event.target)) {\n      console.log(\"here1\");\n      let li = event.target;\n      console.log(li.nodeName);\n      console.log(li);\n      event.preventDefault();\n      event.stopPropagation();\n      while (li.nodeName.toLowerCase() !== \"li\") {\n        console.log(\"using parent\");\n        li = li.parentNode;\n        console.log(li.nodeName);\n        console.log(li);\n        if (!li) {\n          console.log(\"break\");\n          break;\n        }\n        else if (li === tribute.menu) {\n          console.log(\"error\");\n          throw new Error(\"cannot find the <li> container for the click\");\n        }\n      }\n\n      if (!li) {\n        console.log(\"returning\");\n        return;\n      }\n\n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\n      tribute.hideMenu();\n\n      // TODO: should fire with externalTrigger and target is outside of menu\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\n      console.log(\"here2\");\n      tribute.current.externalTrigger = false;\n      setTimeout(() => tribute.hideMenu());\n    }\n  }\n\n  keyup(instance, event) {\n    if (instance.inputEvent) {\n      instance.inputEvent = false;\n    }\n    instance.updateSelection(this);\n\n    if (!event.keyCode || event.keyCode === 27) return;\n\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\n      instance.tribute.hasTrailingSpace = false;\n      instance.commandEvent = true;\n      instance.callbacks()[\"space\"](event, this);\n      return;\n    }\n\n    if (!instance.tribute.isActive) {\n      if (instance.tribute.autocompleteMode) {\n        instance.callbacks().triggerChar(event, this, \"\");\n      } else {\n        let keyCode = instance.getKeyCode(instance, this, event);\n\n        if (isNaN(keyCode) || !keyCode) return;\n\n        let trigger = instance.tribute.triggers().find(trigger => {\n          return trigger.charCodeAt(0) === keyCode;\n        });\n\n        if (typeof trigger !== \"undefined\") {\n          instance.callbacks().triggerChar(event, this, trigger);\n        }\n      }\n    }\n\n    if (\n      instance.tribute.current.mentionText.length <\n      instance.tribute.current.collection.menuShowMinLength\n    ) {\n      return;\n    }\n\n    if (\n      ((instance.tribute.current.trigger ||\n        instance.tribute.autocompleteMode) &&\n        instance.commandEvent === false) ||\n      (instance.tribute.isActive && event.keyCode === 8)\n    ) {\n      instance.tribute.showMenuFor(this, true);\n    }\n  }\n\n  shouldDeactivate(event) {\n    if (!this.tribute.isActive) return false;\n\n    if (this.tribute.current.mentionText.length === 0) {\n      let eventKeyPressed = false;\n      TributeEvents.keys().forEach(o => {\n        if (event.keyCode === o.key) eventKeyPressed = true;\n      });\n\n      return !eventKeyPressed;\n    }\n\n    return false;\n  }\n\n  getKeyCode(instance, el, event) {\n    let char;\n    let tribute = instance.tribute;\n    let info = tribute.range.getTriggerInfo(\n      false,\n      tribute.hasTrailingSpace,\n      true,\n      tribute.allowSpaces,\n      tribute.autocompleteMode\n    );\n\n    if (info) {\n      return info.mentionTriggerChar.charCodeAt(0);\n    } else {\n      return false;\n    }\n  }\n\n  updateSelection(el) {\n    this.tribute.current.element = el;\n    let info = this.tribute.range.getTriggerInfo(\n      false,\n      this.tribute.hasTrailingSpace,\n      true,\n      this.tribute.allowSpaces,\n      this.tribute.autocompleteMode\n    );\n\n    if (info) {\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\n      this.tribute.current.mentionText = info.mentionText;\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\n    }\n  }\n\n  callbacks() {\n    return {\n      triggerChar: (e, el, trigger) => {\n        let tribute = this.tribute;\n        tribute.current.trigger = trigger;\n\n        let collectionItem = tribute.collection.find(item => {\n          return item.trigger === trigger;\n        });\n\n        tribute.current.collection = collectionItem;\n\n        if (\n          tribute.current.mentionText.length >=\n            tribute.current.collection.menuShowMinLength &&\n          tribute.inputEvent\n        ) {\n          tribute.showMenuFor(el, true);\n        }\n      },\n      enter: (e, el) => {\n        // choose selection\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          setTimeout(() => {\n            this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\n            this.tribute.hideMenu();\n          }, 0);\n        }\n      },\n      escape: (e, el) => {\n        if (this.tribute.isActive) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.isActive = false;\n          this.tribute.hideMenu();\n        }\n      },\n      tab: (e, el) => {\n        // choose first match\n        this.callbacks().enter(e, el);\n      },\n      space: (e, el) => {\n        if (this.tribute.isActive) {\n          if (this.tribute.spaceSelectsMatch) {\n            this.callbacks().enter(e, el);\n          } else if (!this.tribute.allowSpaces) {\n            e.stopPropagation();\n            setTimeout(() => {\n              this.tribute.hideMenu();\n              this.tribute.isActive = false;\n            }, 0);\n          }\n        }\n      },\n      up: (e, el) => {\n        // navigate up ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected && selected > 0) {\n            this.tribute.menuSelected--;\n            this.setActiveLi();\n          } else if (selected === 0) {\n            this.tribute.menuSelected = count - 1;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\n          }\n        }\n      },\n      down: (e, el) => {\n        // navigate down ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length - 1,\n            selected = this.tribute.menuSelected;\n\n          if (count > selected) {\n            this.tribute.menuSelected++;\n            this.setActiveLi();\n          } else if (count === selected) {\n            this.tribute.menuSelected = 0;\n            this.setActiveLi();\n            this.tribute.menu.scrollTop = 0;\n          }\n        }\n      },\n      delete: (e, el) => {\n        if (\n          this.tribute.isActive &&\n          this.tribute.current.mentionText.length < 1\n        ) {\n          this.tribute.hideMenu();\n        } else if (this.tribute.isActive) {\n          this.tribute.showMenuFor(el);\n        }\n      }\n    };\n  }\n\n  setActiveLi(index) {\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\n      length = lis.length >>> 0;\n\n    if (index) this.tribute.menuSelected = parseInt(index);\n\n    for (let i = 0; i < length; i++) {\n      let li = lis[i];\n      if (i === this.tribute.menuSelected) {\n        li.classList.add(this.tribute.current.collection.selectClass);\n\n        let liClientRect = li.getBoundingClientRect();\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\n\n        if (liClientRect.bottom > menuClientRect.bottom) {\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\n          this.tribute.menu.scrollTop += scrollDistance;\n        } else if (liClientRect.top < menuClientRect.top) {\n          let scrollDistance = menuClientRect.top - liClientRect.top;\n          this.tribute.menu.scrollTop -= scrollDistance;\n        }\n      } else {\n        li.classList.remove(this.tribute.current.collection.selectClass);\n      }\n    }\n  }\n\n  getFullHeight(elem, includeMargin) {\n    let height = elem.getBoundingClientRect().height;\n\n    if (includeMargin) {\n      let style = elem.currentStyle || window.getComputedStyle(elem);\n      return (\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\n      );\n    }\n\n    return height;\n  }\n}\n\nexport default TributeEvents;\n","class TributeMenuEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.menuEvents = this;\n    this.menu = this.tribute.menu;\n  }\n\n  bind(menu) {\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\n    this.menuContainerScrollEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.hideMenu();\n        }\n      },\n      10,\n      false\n    );\n    this.windowResizeEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.hideMenu();\n        }\n      },\n      10,\n      false\n    );\n\n    // fixes IE11 issues with mousedown\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\n    window.addEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.addEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  unbind(menu) {\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.removeEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  debounce(func, wait, immediate) {\n    var timeout;\n    return () => {\n      var context = this,\n        args = arguments;\n      var later = () => {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n}\n\nexport default TributeMenuEvents;\n","// Thanks to https://github.com/jeff-collins/ment.io\nimport \"./utils\";\n\nclass TributeRange {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.range = this\n    }\n\n    getDocument() {\n        let iframe\n        if (this.tribute.current.collection) {\n            iframe = this.tribute.current.collection.iframe\n        }\n\n        if (!iframe) {\n            return document\n        }\n\n        return iframe.contentWindow.document\n    }\n\n    positionMenuAtCaret(scrollTo) {\n        let context = this.tribute.current,\n            coordinates\n\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (typeof info !== 'undefined') {\n\n            if(!this.tribute.positionMenu){\n                this.tribute.menu.style.cssText = `display: block;`\n                return\n            }\n\n            if (!this.isContentEditable(context.element)) {\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\n                    info.mentionPosition)\n            }\n            else {\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition)\n            }\n\n            this.tribute.menu.style.cssText = `top: ${coordinates.top}px;\n                                     left: ${coordinates.left}px;\n                                     right: ${coordinates.right}px;\n                                     bottom: ${coordinates.bottom}px;\n                                     max-height: ${coordinates.maxHeight || 500}px;\n                                     max-width: ${coordinates.maxWidth || 300}px;\n                                     position: ${coordinates.position || 'absolute'};\n                                     display: block;`\n\n            if (coordinates.left === 'auto') {\n                this.tribute.menu.style.left = 'auto'\n            }\n\n            if (coordinates.top === 'auto') {\n                this.tribute.menu.style.top = 'auto'\n            }\n\n            if (scrollTo) this.scrollIntoView()\n\n        } else {\n            this.tribute.menu.style.cssText = 'display: none'\n        }\n    }\n\n    get menuContainerIsBody() {\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\n    }\n\n\n    selectElement(targetElement, path, offset) {\n        let range\n        let elem = targetElement\n\n        if (path) {\n            for (var i = 0; i < path.length; i++) {\n                elem = elem.childNodes[path[i]]\n                if (elem === undefined) {\n                    return\n                }\n                while (elem.length < offset) {\n                    offset -= elem.length\n                    elem = elem.nextSibling\n                }\n                if (elem.childNodes.length === 0 && !elem.length) {\n                    elem = elem.previousSibling\n                }\n            }\n        }\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(elem, offset)\n        range.setEnd(elem, offset)\n        range.collapse(true)\n\n        try {\n            sel.removeAllRanges()\n        } catch (error) {}\n\n        sel.addRange(range)\n        targetElement.focus()\n    }\n\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\n        let info = this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (info !== undefined) {\n            let context = this.tribute.current\n            let replaceEvent = new CustomEvent('tribute-replaced', {\n                detail: {\n                    item: item,\n                    instance: context,\n                    context: info,\n                    event: originalEvent,\n                }\n            })\n\n            if (!this.isContentEditable(context.element)) {\n                let myField = this.tribute.current.element\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : ' '\n                text += textSuffix\n                let startPos = info.mentionPosition\n                let endPos = info.mentionPosition + info.mentionText.length + (textSuffix === '' ? 1 : textSuffix.length)\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length - 1\n                }\n                myField.value = myField.value.substring(0, startPos) + text +\n                    myField.value.substring(endPos, myField.value.length)\n                myField.selectionStart = startPos + text.length\n                myField.selectionEnd = startPos + text.length\n            } else {\n                // add a space to the end of the pasted text\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : '\\xA0'\n                text += textSuffix\n                let endPos = info.mentionPosition + info.mentionText.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length\n                }\n                this.pasteHtml(text, info.mentionPosition, endPos)\n            }\n\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true }))\n            context.element.dispatchEvent(replaceEvent)\n        }\n    }\n\n    pasteHtml(html, startPos, endPos) {\n        let range, sel\n        sel = this.getWindowSelection()\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, startPos)\n        range.setEnd(sel.anchorNode, endPos)\n        range.deleteContents()\n\n        let el = this.getDocument().createElement('div')\n        el.innerHTML = html\n        let frag = this.getDocument().createDocumentFragment(),\n            node, lastNode\n        while ((node = el.firstChild)) {\n            lastNode = frag.appendChild(node)\n        }\n        range.insertNode(frag)\n\n        // Preserve the selection\n        if (lastNode) {\n            range = range.cloneRange()\n            range.setStartAfter(lastNode)\n            range.collapse(true)\n            sel.removeAllRanges()\n            sel.addRange(range)\n        }\n    }\n\n    getWindowSelection() {\n        if (this.tribute.collection.iframe) {\n            return this.tribute.collection.iframe.contentWindow.getSelection()\n        }\n\n        return window.getSelection()\n    }\n\n    getNodePositionInParent(element) {\n        if (element.parentNode === null) {\n            return 0\n        }\n\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\n            let node = element.parentNode.childNodes[i]\n\n            if (node === element) {\n                return i\n            }\n        }\n    }\n\n    getContentEditableSelectedPath(ctx) {\n        let sel = this.getWindowSelection()\n        let selected = sel.anchorNode\n        let path = []\n        let offset\n\n        if (selected != null) {\n            let i\n            let ce = selected.contentEditable\n            while (selected !== null && ce !== 'true') {\n                i = this.getNodePositionInParent(selected)\n                path.push(i)\n                selected = selected.parentNode\n                if (selected !== null) {\n                    ce = selected.contentEditable\n                }\n            }\n            path.reverse()\n\n            // getRangeAt may not exist, need alternative\n            offset = sel.getRangeAt(0).startOffset\n\n            return {\n                selected: selected,\n                path: path,\n                offset: offset\n            }\n        }\n    }\n\n    getTextPrecedingCurrentSelection() {\n        let context = this.tribute.current,\n            text = ''\n\n        if (!this.isContentEditable(context.element)) {\n            let textComponent = this.tribute.current.element;\n            if (textComponent) {\n                let startPos = textComponent.selectionStart\n                if (textComponent.value && startPos >= 0) {\n                    text = textComponent.value.substring(0, startPos)\n                }\n            }\n\n        } else {\n            let selectedElem = this.getWindowSelection().anchorNode\n\n            if (selectedElem != null) {\n                let workingNodeContent = selectedElem.textContent\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\n\n                if (workingNodeContent && selectStartOffset >= 0) {\n                    text = workingNodeContent.substring(0, selectStartOffset)\n                }\n            }\n        }\n\n        return text\n    }\n\n    getLastWordInText(text) {\n        var wordsArray;\n        if (this.tribute.autocompleteSeparator) {\n            wordsArray = text.split(this.tribute.autocompleteSeparator);\n        } else {\n            wordsArray = text.split(/\\s+/);\n        }\n        var wordsCount = wordsArray.length - 1;\n        return wordsArray[wordsCount];\n    }\n\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\n        let ctx = this.tribute.current\n        let selected, path, offset\n\n        if (!this.isContentEditable(ctx.element)) {\n            selected = this.tribute.current.element\n        } else {\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\n\n            if (selectionInfo) {\n                selected = selectionInfo.selected\n                path = selectionInfo.path\n                offset = selectionInfo.offset\n            }\n        }\n\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\n        let lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange)\n\n        if (isAutocomplete) {\n            return {\n                mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\n                mentionText: lastWordOfEffectiveRange,\n                mentionSelectedElement: selected,\n                mentionSelectedPath: path,\n                mentionSelectedOffset: offset\n            }\n        }\n\n        if (effectiveRange !== undefined && effectiveRange !== null) {\n            let mostRecentTriggerCharPos = -1\n            let triggerChar\n\n            this.tribute.collection.forEach(config => {\n                let c = config.trigger\n                let idx = config.requireLeadingSpace ?\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\n                    effectiveRange.lastIndexOf(c)\n\n                if (idx > mostRecentTriggerCharPos) {\n                    mostRecentTriggerCharPos = idx\n                    triggerChar = c\n                    requireLeadingSpace = config.requireLeadingSpace\n                }\n            })\n\n            if (mostRecentTriggerCharPos >= 0 &&\n                (\n                    mostRecentTriggerCharPos === 0 ||\n                    !requireLeadingSpace ||\n                    /\\s/.test(\n                        effectiveRange.substring(\n                            mostRecentTriggerCharPos - 1,\n                            mostRecentTriggerCharPos)\n                    )\n                )\n            ) {\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\n                    effectiveRange.length)\n\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\n                    (\n                        firstSnippetChar === ' ' ||\n                        firstSnippetChar === '\\xA0'\n                    )\n                if (hasTrailingSpace) {\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\n                }\n\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\n\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\n\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\n                    return {\n                        mentionPosition: mostRecentTriggerCharPos,\n                        mentionText: currentTriggerSnippet,\n                        mentionSelectedElement: selected,\n                        mentionSelectedPath: path,\n                        mentionSelectedOffset: offset,\n                        mentionTriggerChar: triggerChar\n                    }\n                }\n            }\n        }\n    }\n\n    lastIndexWithLeadingSpace (str, trigger) {\n        let reversedStr = str.split('').reverse().join('')\n        let index = -1\n\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\n            let firstChar = cidx === str.length - 1\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\n\n            let match = true\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\n                match = false\n                break\n              }\n            }\n\n            if (match && (firstChar || leadingSpace)) {\n                index = str.length - 1 - cidx\n                break\n            }\n        }\n\n        return index\n    }\n\n    isContentEditable(element) {\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\n    }\n\n    isMenuOffScreen(coordinates, menuDimensions) {\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : windowTop + windowHeight - coordinates.bottom - menuDimensions.height\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : windowLeft + windowWidth - coordinates.right - menuDimensions.width\n\n        return {\n            top: menuTop < Math.floor(windowTop),\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\n            left: menuLeft < Math.floor(windowLeft)\n        }\n    }\n\n    getMenuDimensions() {\n        // Width of the menu depends of its contents and position\n        // We must check what its width would be without any obstruction\n        // This way, we can achieve good positioning for flipping the menu\n        let dimensions = {\n            width: null,\n            height: null\n        }\n\n        this.tribute.menu.style.cssText = `top: 0px;\n                                 left: 0px;\n                                 position: fixed;\n                                 display: block;\n                                 visibility; hidden;\n                                 max-height:500px;`\n       dimensions.width = this.tribute.menu.offsetWidth\n       dimensions.height = this.tribute.menu.offsetHeight\n\n       this.tribute.menu.style.cssText = `display: none;`\n\n       return dimensions\n    }\n\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\n            'borderBottomWidth', 'borderLeftWidth', 'borderStyle', 'paddingTop',\n            'paddingRight', 'paddingBottom', 'paddingLeft',\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\n            'textAlign', 'textTransform', 'textIndent',\n            'textDecoration', 'letterSpacing', 'wordSpacing'\n        ]\n\n        let isFirefox = (window.mozInnerScreenX !== null)\n\n        let div = this.getDocument().createElement('div')\n        div.id = 'input-textarea-caret-position-mirror-div'\n        this.getDocument().body.appendChild(div)\n\n        let style = div.style\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n\n        style.whiteSpace = 'pre-wrap'\n        if (element.nodeName !== 'INPUT') {\n            style.wordWrap = 'break-word'\n        }\n\n        style.position = 'absolute'\n        style.visibility = 'hidden'\n\n        // transfer the element's properties to the div\n        properties.forEach(prop => {\n            style[prop] = computed[prop]\n        })\n\n        //NOT SURE WHY THIS IS HERE AND IT DOESNT SEEM HELPFUL\n        // if (isFirefox) {\n        //     style.width = `${(parseInt(computed.width) - 2)}px`\n        //     if (element.scrollHeight > parseInt(computed.height))\n        //         style.overflowY = 'scroll'\n        // } else {\n        //     style.overflow = 'hidden'\n        // }\n\n        let span0 = document.createElement('span')\n        span0.textContent =  element.value.substring(0, position)\n        div.appendChild(span0)\n\n        if (element.nodeName === 'INPUT') {\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\n        }\n\n        //Create a span in the div that represents where the cursor\n        //should be\n        let span = this.getDocument().createElement('span')\n        //we give it no content as this represents the cursor\n        span.textContent = '&#x200B;'\n        div.appendChild(span)\n\n        let span2 = this.getDocument().createElement('span');\n        span2.textContent = element.value.substring(position);\n        div.appendChild(span2);\n\n        let rect = element.getBoundingClientRect()\n\n        //position the div exactly over the element\n        //so we can get the bounding client rect for the span and\n        //it should represent exactly where the cursor is\n        div.style.position = 'fixed';\n        div.style.left = rect.left + 'px';\n        div.style.top = rect.top + 'px';\n        div.style.width = rect.width + 'px';\n        div.style.height = rect.height + 'px';\n        div.scrollTop = element.scrollTop;\n\n        var spanRect = span.getBoundingClientRect();\n        this.getDocument().body.removeChild(div)\n        return this.getFixedCoordinatesRelativeToRect(spanRect);\n    }\n\n    getContentEditableCaretPosition(selectedNodePosition) {\n        let range\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, selectedNodePosition)\n        range.setEnd(sel.anchorNode, selectedNodePosition)\n\n        range.collapse(false)\n\n        let rect = range.getBoundingClientRect()\n\n        return this.getFixedCoordinatesRelativeToRect(rect);\n    }\n\n    getFixedCoordinatesRelativeToRect(rect) {\n        let coordinates = {\n            position: 'fixed',\n            left: rect.left,\n            top: rect.top + rect.height\n        }\n\n        let menuDimensions = this.getMenuDimensions()\n\n        var availableSpaceOnTop = rect.top;\n        var availableSpaceOnBottom = window.innerHeight - (rect.top + rect.height);\n\n        //check to see where's the right place to put the menu vertically\n        if (availableSpaceOnBottom < menuDimensions.height) {\n          if (availableSpaceOnTop >= menuDimensions.height || availableSpaceOnTop > availableSpaceOnBottom) {\n            coordinates.top = 'auto';\n            coordinates.bottom = window.innerHeight - rect.top;\n            if (availableSpaceOnBottom < menuDimensions.height) {\n              coordinates.maxHeight = availableSpaceOnTop;\n            }\n          } else {\n            if (availableSpaceOnTop < menuDimensions.height) {\n              coordinates.maxHeight = availableSpaceOnBottom;\n            }\n          }\n        }\n\n        var availableSpaceOnLeft = rect.left;\n        var availableSpaceOnRight = window.innerWidth - rect.left;\n\n        //check to see where's the right place to put the menu horizontally\n        if (availableSpaceOnRight < menuDimensions.width) {\n          if (availableSpaceOnLeft >= menuDimensions.width || availableSpaceOnLeft > availableSpaceOnRight) {\n            coordinates.left = 'auto';\n            coordinates.right = window.innerWidth - rect.left;\n            if (availableSpaceOnRight < menuDimensions.width) {\n              coordinates.maxWidth = availableSpaceOnLeft;\n            }\n          } else {\n            if (availableSpaceOnLeft < menuDimensions.width) {\n              coordinates.maxWidth = availableSpaceOnRight;\n            }\n          }\n        }\n\n        return coordinates\n    }\n\n    scrollIntoView(elem) {\n        let reasonableBuffer = 20,\n            clientRect\n        let maxScrollDisplacement = 100\n        let e = this.menu\n\n        if (typeof e === 'undefined') return;\n\n        while (clientRect === undefined || clientRect.height === 0) {\n            clientRect = e.getBoundingClientRect()\n\n            if (clientRect.height === 0) {\n                e = e.childNodes[0]\n                if (e === undefined || !e.getBoundingClientRect) {\n                    return\n                }\n            }\n        }\n\n        let elemTop = clientRect.top\n        let elemBottom = elemTop + clientRect.height\n\n        if (elemTop < 0) {\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\n        } else if (elemBottom > window.innerHeight) {\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\n\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\n                maxY = window.pageYOffset + maxScrollDisplacement\n            }\n\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\n\n            if (targetY > maxY) {\n                targetY = maxY\n            }\n\n            window.scrollTo(0, targetY)\n        }\n    }\n}\n\n\nexport default TributeRange;\n","// Thanks to https://github.com/mattyork/fuzzy\nclass TributeSearch {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.search = this\n    }\n\n    simpleFilter(pattern, array) {\n        return array.filter(string => {\n            return this.test(pattern, string)\n        })\n    }\n\n    test(pattern, string) {\n        return this.match(pattern, string) !== null\n    }\n\n    match(pattern, string, opts) {\n        opts = opts || {}\n        let patternIdx = 0,\n            result = [],\n            len = string.length,\n            totalScore = 0,\n            currScore = 0,\n            pre = opts.pre || '',\n            post = opts.post || '',\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\n            ch, compareChar\n\n        if (opts.skip) {\n            return {rendered: string, score: 0}\n        }\n\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\n\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\n        if (!patternCache) {\n            return null\n        }\n        return {\n            rendered: this.render(string, patternCache.cache, pre, post),\n            score: patternCache.score\n        }\n    }\n\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\n        if (this.tribute.autocompleteSeparator) {\n            // if the pattern search at end\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\n        }\n\n        if (pattern.length === patternIndex) {\n\n            // calculate score and copy the cache containing the indices where it's found\n            return {\n                score: this.calculateScore(patternCache),\n                cache: patternCache.slice()\n            }\n        }\n\n        // if string at end or remaining pattern > remaining string\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\n            return undefined\n        }\n\n        let c = pattern[patternIndex]\n        let index = string.indexOf(c, stringIndex)\n        let best, temp\n\n        while (index > -1) {\n            patternCache.push(index)\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\n            patternCache.pop()\n\n            // if downstream traversal failed, return best answer so far\n            if (!temp) {\n                return best\n            }\n\n            if (!best || best.score < temp.score) {\n                best = temp\n            }\n\n            index = string.indexOf(c, index + 1)\n        }\n\n        return best\n    }\n\n    calculateScore(patternCache) {\n        let score = 0\n        let temp = 1\n\n        patternCache.forEach((index, i) => {\n            if (i > 0) {\n                if (patternCache[i - 1] + 1 === index) {\n                    temp += temp + 1\n                }\n                else {\n                    temp = 1\n                }\n            }\n\n            score += temp\n        })\n\n        return score\n    }\n\n    render(string, indices, pre, post) {\n        var rendered = string.substring(0, indices[0])\n\n        indices.forEach((index, i) => {\n            rendered += pre + string[index] + post +\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\n        })\n\n        return rendered\n    }\n\n    filter(pattern, arr, opts) {\n        opts = opts || {}\n        return arr\n            .reduce((prev, element, idx, arr) => {\n                let str = element\n\n                if (opts.extract) {\n                    str = opts.extract(element)\n\n                    if (!str) { // take care of undefineds / nulls / etc.\n                        str = ''\n                    }\n                }\n\n                let rendered = this.match(pattern, str, opts)\n\n                if (rendered != null) {\n                    prev[prev.length] = {\n                        string: rendered.rendered,\n                        score: rendered.score,\n                        index: idx,\n                        original: element\n                    }\n                }\n\n                return prev\n            }, [])\n\n        .sort((a, b) => {\n            let compare = b.score - a.score\n            if (compare) return compare\n            return a.index - b.index\n        })\n    }\n}\n\nexport default TributeSearch;\n","import \"./utils\";\nimport TributeEvents from \"./TributeEvents\";\nimport TributeMenuEvents from \"./TributeMenuEvents\";\nimport TributeRange from \"./TributeRange\";\nimport TributeSearch from \"./TributeSearch\";\n\nclass Tribute {\n  constructor({\n    values = null,\n    loadingItemTemplate = null,\n    iframe = null,\n    selectClass = \"highlight\",\n    containerClass = \"tribute-container\",\n    itemClass = \"\",\n    trigger = \"@\",\n    autocompleteMode = false,\n    autocompleteSeparator = null,\n    selectTemplate = null,\n    menuItemTemplate = null,\n    lookup = \"key\",\n    fillAttr = \"value\",\n    collection = null,\n    menuContainer = null,\n    noMatchTemplate = null,\n    requireLeadingSpace = true,\n    allowSpaces = false,\n    replaceTextSuffix = null,\n    positionMenu = true,\n    spaceSelectsMatch = false,\n    searchOpts = {},\n    menuItemLimit = null,\n    menuShowMinLength = 0\n  }) {\n    this.autocompleteMode = autocompleteMode;\n    this.autocompleteSeparator = autocompleteSeparator;\n    this.menuSelected = 0;\n    this.current = {};\n    this.inputEvent = false;\n    this.isActive = false;\n    this.menuContainer = menuContainer;\n    this.allowSpaces = allowSpaces;\n    this.replaceTextSuffix = replaceTextSuffix;\n    this.positionMenu = positionMenu;\n    this.hasTrailingSpace = false;\n    this.spaceSelectsMatch = spaceSelectsMatch;\n\n    if (this.autocompleteMode) {\n      trigger = \"\";\n      allowSpaces = false;\n    }\n\n    if (values) {\n      this.collection = [\n        {\n          // symbol that starts the lookup\n          trigger: trigger,\n\n          // is it wrapped in an iframe\n          iframe: iframe,\n\n          // class applied to selected item\n          selectClass: selectClass,\n\n          // class applied to the Container\n          containerClass: containerClass,\n\n          // class applied to each item\n          itemClass: itemClass,\n\n          // function called on select that retuns the content to insert\n          selectTemplate: (\n            selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n\n          // function called that returns content for an item\n          menuItemTemplate: (\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n\n          // column to search against in the object\n          lookup: lookup,\n\n          // column that contains the content to insert by default\n          fillAttr: fillAttr,\n\n          // array of objects or a function returning an array of objects\n          values: values,\n\n          // useful for when values is an async function\n          loadingItemTemplate: loadingItemTemplate,\n\n          requireLeadingSpace: requireLeadingSpace,\n\n          searchOpts: searchOpts,\n\n          menuItemLimit: menuItemLimit,\n\n          menuShowMinLength: menuShowMinLength\n        }\n      ];\n    } else if (collection) {\n      if (this.autocompleteMode)\n        console.warn(\n          \"Tribute in autocomplete mode does not work for collections\"\n        );\n      this.collection = collection.map(item => {\n        return {\n          trigger: item.trigger || trigger,\n          iframe: item.iframe || iframe,\n          selectClass: item.selectClass || selectClass,\n          containerClass: item.containerClass || containerClass,\n          itemClass: item.itemClass || itemClass,\n          selectTemplate: (\n            item.selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n          menuItemTemplate: (\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n          lookup: item.lookup || lookup,\n          fillAttr: item.fillAttr || fillAttr,\n          values: item.values,\n          loadingItemTemplate: item.loadingItemTemplate,\n          requireLeadingSpace: item.requireLeadingSpace,\n          searchOpts: item.searchOpts || searchOpts,\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength\n        };\n      });\n    } else {\n      throw new Error(\"[Tribute] No collection specified.\");\n    }\n\n    new TributeRange(this);\n    new TributeEvents(this);\n    new TributeMenuEvents(this);\n    new TributeSearch(this);\n  }\n\n  get isActive() {\n    return this._isActive;\n  }\n\n  set isActive(val) {\n    if (this._isActive != val) {\n      this._isActive = val;\n      if (this.current.element) {\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\n        this.current.element.dispatchEvent(noMatchEvent);\n      }\n    }\n  }\n\n  static defaultSelectTemplate(item) {\n    if (typeof item === \"undefined\")\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\n    if (this.range.isContentEditable(this.current.element)) {\n      return (\n        '<span class=\"tribute-mention\">' +\n        (this.current.collection.trigger +\n          item.original[this.current.collection.fillAttr]) +\n        \"</span>\"\n      );\n    }\n\n    return (\n      this.current.collection.trigger +\n      item.original[this.current.collection.fillAttr]\n    );\n  }\n\n  static defaultMenuItemTemplate(matchItem) {\n    return matchItem.string;\n  }\n\n  static inputTypes() {\n    return [\"TEXTAREA\", \"INPUT\"];\n  }\n\n  triggers() {\n    return this.collection.map(config => {\n      return config.trigger;\n    });\n  }\n\n  attach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._attach(el[i]);\n      }\n    } else {\n      this._attach(el);\n    }\n  }\n\n  _attach(el) {\n    if (el.hasAttribute(\"data-tribute\")) {\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\n    }\n\n    this.ensureEditable(el);\n    this.events.bind(el);\n    el.setAttribute(\"data-tribute\", true);\n  }\n\n  ensureEditable(element) {\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\n      if (!element.contentEditable) {\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName + \", not contentEditable\");\n      }\n    }\n  }\n\n  createMenu(containerClass) {\n    let wrapper = this.range.getDocument().createElement(\"div\"),\n      ul = this.range.getDocument().createElement(\"ul\");\n    wrapper.className = containerClass;\n    wrapper.appendChild(ul);\n\n    if (this.menuContainer) {\n      return this.menuContainer.appendChild(wrapper);\n    }\n\n    return this.range.getDocument().body.appendChild(wrapper);\n  }\n\n  showMenuFor(element, scrollTo) {\n    // Only proceed if menu isn't already shown for the current element & mentionText\n    if (\n      this.isActive &&\n      this.current.element === element &&\n      this.current.mentionText === this.currentMentionTextSnapshot\n    ) {\n      return;\n    }\n    this.currentMentionTextSnapshot = this.current.mentionText;\n\n    // create the menu if it doesn't exist.\n    if (!this.menu) {\n      this.menu = this.createMenu(this.current.collection.containerClass);\n      element.tributeMenu = this.menu;\n      this.menuEvents.bind(this.menu);\n    }\n\n    this.isActive = true;\n    this.menuSelected = 0;\n\n    if (!this.current.mentionText) {\n      this.current.mentionText = \"\";\n    }\n\n    const processValues = values => {\n      // Tribute may not be active any more by the time the value callback returns\n      if (!this.isActive) {\n        return;\n      }\n\n      let items = this.search.filter(this.current.mentionText, values, {\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\n        post: this.current.collection.searchOpts.post || \"</span>\",\n        skip: this.current.collection.searchOpts.skip,\n        extract: el => {\n          if (typeof this.current.collection.lookup === \"string\") {\n            return el[this.current.collection.lookup];\n          } else if (typeof this.current.collection.lookup === \"function\") {\n            return this.current.collection.lookup(el, this.current.mentionText);\n          } else {\n            throw new Error(\n              \"Invalid lookup attribute, lookup must be string or function.\"\n            );\n          }\n        }\n      });\n\n      if (this.current.collection.menuItemLimit) {\n        items = items.slice(0, this.current.collection.menuItemLimit);\n      }\n\n      this.current.filteredItems = items;\n\n      let ul = this.menu.querySelector(\"ul\");\n\n      if (!items.length) {\n        let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\n          detail: this.menu\n        });\n        this.current.element.dispatchEvent(noMatchEvent);\n        if (\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\n            !this.current.collection.noMatchTemplate()) ||\n          !this.current.collection.noMatchTemplate\n        ) {\n          this.hideMenu();\n        } else {\n          typeof this.current.collection.noMatchTemplate === \"function\"\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\n            this.range.positionMenuAtCaret(scrollTo);\n        }\n\n        return;\n      }\n\n      ul.innerHTML = \"\";\n      let fragment = this.range.getDocument().createDocumentFragment();\n\n      items.forEach((item, index) => {\n        let li = this.range.getDocument().createElement(\"li\");\n        li.setAttribute(\"data-index\", index);\n        li.className = this.current.collection.itemClass;\n        li.addEventListener(\"mousemove\", e => {\n          let [li, index] = this._findLiTarget(e.target);\n          if (e.movementY !== 0) {\n            this.events.setActiveLi(index);\n          }\n        });\n        if (this.menuSelected === index) {\n          li.classList.add(this.current.collection.selectClass);\n        }\n        li.innerHTML = this.current.collection.menuItemTemplate(item);\n        fragment.appendChild(li);\n      });\n      ul.appendChild(fragment);\n\n      this.range.positionMenuAtCaret(scrollTo);\n    };\n\n    if (typeof this.current.collection.values === \"function\") {\n      if (this.current.collection.loadingItemTemplate) {\n        this.menu.querySelector(\"ul\").innerHTML = this.current.collection.loadingItemTemplate;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n\n      this.current.collection.values(this.current.mentionText, processValues);\n    } else {\n      processValues(this.current.collection.values);\n    }\n  }\n\n  _findLiTarget(el) {\n    if (!el) return [];\n    const index = el.getAttribute(\"data-index\");\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\n  }\n\n  showMenuForCollection(element, collectionIndex) {\n    if (element !== document.activeElement) {\n      this.placeCaretAtEnd(element);\n    }\n\n    this.current.collection = this.collection[collectionIndex || 0];\n    this.current.externalTrigger = true;\n    this.current.element = element;\n\n    if (element.isContentEditable)\n      this.insertTextAtCursor(this.current.collection.trigger);\n    else this.insertAtCaret(element, this.current.collection.trigger);\n\n    this.showMenuFor(element);\n  }\n\n  // TODO: make sure this works for inputs/textareas\n  placeCaretAtEnd(el) {\n    el.focus();\n    if (\n      typeof window.getSelection != \"undefined\" &&\n      typeof document.createRange != \"undefined\"\n    ) {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n    }\n  }\n\n  // for contenteditable\n  insertTextAtCursor(text) {\n    var sel, range, html;\n    sel = window.getSelection();\n    range = sel.getRangeAt(0);\n    range.deleteContents();\n    var textNode = document.createTextNode(text);\n    range.insertNode(textNode);\n    range.selectNodeContents(textNode);\n    range.collapse(false);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  // for regular inputs\n  insertAtCaret(textarea, text) {\n    var scrollPos = textarea.scrollTop;\n    var caretPos = textarea.selectionStart;\n\n    var front = textarea.value.substring(0, caretPos);\n    var back = textarea.value.substring(\n      textarea.selectionEnd,\n      textarea.value.length\n    );\n    textarea.value = front + text + back;\n    caretPos = caretPos + text.length;\n    textarea.selectionStart = caretPos;\n    textarea.selectionEnd = caretPos;\n    textarea.focus();\n    textarea.scrollTop = scrollPos;\n  }\n\n  hideMenu() {\n    if (this.menu) {\n      this.menu.style.cssText = \"display: none;\";\n      this.isActive = false;\n      this.menuSelected = 0;\n      this.current = {};\n    }\n  }\n\n  selectItemAtIndex(index, originalEvent) {\n    index = parseInt(index);\n    if (typeof index !== \"number\" || isNaN(index)) return;\n    let item = this.current.filteredItems[index];\n    let content = this.current.collection.selectTemplate(item);\n    if (content !== null) this.replaceText(content, originalEvent, item);\n  }\n\n  replaceText(content, originalEvent, item) {\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\n  }\n\n  _append(collection, newValues, replace) {\n    if (typeof collection.values === \"function\") {\n      throw new Error(\"Unable to append to values, as it is a function.\");\n    } else if (!replace) {\n      collection.values = collection.values.concat(newValues);\n    } else {\n      collection.values = newValues;\n    }\n  }\n\n  append(collectionIndex, newValues, replace) {\n    let index = parseInt(collectionIndex);\n    if (typeof index !== \"number\")\n      throw new Error(\"please provide an index for the collection to update.\");\n\n    let collection = this.collection[index];\n\n    this._append(collection, newValues, replace);\n  }\n\n  appendCurrent(newValues, replace) {\n    if (this.isActive) {\n      this._append(this.current.collection, newValues, replace);\n    } else {\n      throw new Error(\n        \"No active state. Please use append instead and pass an index.\"\n      );\n    }\n  }\n\n  detach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._detach(el[i]);\n      }\n    } else {\n      this._detach(el);\n    }\n  }\n\n  _detach(el) {\n    this.events.unbind(el);\n    if (el.tributeMenu) {\n      this.menuEvents.unbind(el.tributeMenu);\n    }\n\n    setTimeout(() => {\n      el.removeAttribute(\"data-tribute\");\n      this.isActive = false;\n      if (el.tributeMenu) {\n        el.tributeMenu.remove();\n      }\n    });\n  }\n}\n\nexport default Tribute;\n"],"names":["Array","prototype","find","Object","defineProperty","value","predicate","this","TypeError","o","len","length","thisArg","arguments","k","kValue","call","configurable","writable","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","TributeEvents","tribute","events","element","boundKeydown","keydown","bind","boundKeyup","keyup","boundInput","input","addEventListener","removeEventListener","instance","shouldDeactivate","isActive","hideMenu","commandEvent","keys","forEach","key","keyCode","callbacks","toLowerCase","inputEvent","console","log","menu","contains","target","li","nodeName","preventDefault","stopPropagation","parentNode","Error","selectItemAtIndex","getAttribute","current","externalTrigger","setTimeout","updateSelection","allowSpaces","hasTrailingSpace","autocompleteMode","triggerChar","getKeyCode","isNaN","trigger","triggers","charCodeAt","mentionText","collection","menuShowMinLength","showMenuFor","eventKeyPressed","el","info","range","getTriggerInfo","mentionTriggerChar","selectedPath","mentionSelectedPath","selectedOffset","mentionSelectedOffset","e","_this","collectionItem","item","enter","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","up","count","selected","setActiveLi","scrollTop","scrollHeight","down","index","lis","querySelectorAll","parseInt","i","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","getDocument","menuContainer","func","wait","immediate","timeout","context","_this2","args","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","cssText","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","left","right","maxHeight","maxWidth","position","scrollIntoView","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","text","requireLeadingSpace","originalEvent","replaceEvent","replaceTextSuffix","endPos","pasteHtml","myField","textSuffix","startPos","substring","selectionStart","selectionEnd","dispatchEvent","html","anchorNode","deleteContents","createElement","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","appendChild","insertNode","cloneRange","setStartAfter","getSelection","ctx","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","selectedElem","workingNodeContent","textContent","selectStartOffset","textComponent","wordsArray","autocompleteSeparator","split","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","effectiveRange","getTextPrecedingCurrentSelection","lastWordOfEffectiveRange","getLastWordInText","mentionSelectedElement","mostRecentTriggerCharPos","config","c","idx","lastIndexWithLeadingSpace","lastIndexOf","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","trim","regex","str","reversedStr","join","cidx","firstChar","match","triggerIdx","menuDimensions","windowWidth","innerWidth","windowHeight","innerHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","width","menuBottom","menuLeft","Math","floor","ceil","dimensions","offsetWidth","offsetHeight","flipped","div","id","body","computed","whiteSpace","wordWrap","visibility","prop","span0","replace","span","span2","rect","spanRect","removeChild","getFixedCoordinatesRelativeToRect","selectedNodePosition","getMenuDimensions","availableSpaceOnTop","availableSpaceOnBottom","availableSpaceOnLeft","availableSpaceOnRight","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","filter","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","slice","best","temp","indexOf","pop","indices","arr","reduce","prev","extract","original","sort","a","b","compare","t","values","loadingItemTemplate","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","warn","map","jQuery","get","constructor","NodeList","HTMLCollection","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","className","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","items","querySelector","noMatchEvent","positionMenuAtCaret","fragment","_findLiTarget","movementY","collectionIndex","activeElement","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","textNode","createTextNode","textarea","scrollPos","caretPos","front","back","content","replaceText","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this3","_isActive","val","matchItem"],"mappings":"k8CA8CA,GA9CKA,MAAMC,UAAUC,MACnBC,OAAOC,eAAeJ,MAAMC,UAAW,OAAQ,CAC7CI,MAAO,SAASC,MAEF,MAARC,WACIC,UAAU,qCAGdC,EAAIN,OAAOI,MAGXG,EAAMD,EAAEE,SAAW,KAGE,mBAAdL,QACHE,UAAU,wCAIdI,EAAUC,UAAU,GAGpBC,EAAI,EAGDA,EAAIJ,GAAK,KAKVK,EAASN,EAAEK,MACXR,EAAUU,KAAKJ,EAASG,EAAQD,EAAGL,UAC9BM,EAGTD,MAMJG,cAAc,EACdC,UAAU,IAIQ,oBAAXC,QAAwD,mBAAvBA,OAAOC,YAA4B,KACpEA,EAAT,SAAqBC,EAAOC,GAC1BA,EAASA,GAAU,CACjBC,SAAS,EACTC,YAAY,EACZC,YAAQC,OAENC,EAAMC,SAASC,YAAY,sBAC/BF,EAAIG,gBAAgBT,EAAOC,EAAOC,QAASD,EAAOE,WAAYF,EAAOG,QAC9DE,QAGkB,IAAjBR,OAAOY,QAChBX,EAAYnB,UAAYkB,OAAOY,MAAM9B,WAGtCkB,OAAOC,YAAcA,MC9DjBY,wBACQC,kBACLA,QAAUA,OACVA,QAAQC,OAAS3B,4CAoCnB4B,GACHA,EAAQC,aAAe7B,KAAK8B,QAAQC,KAAKH,EAAS5B,MAClD4B,EAAQI,WAAahC,KAAKiC,MAAMF,KAAKH,EAAS5B,MAC9C4B,EAAQM,WAAalC,KAAKmC,MAAMJ,KAAKH,EAAS5B,MAE9C4B,EAAQQ,iBAAiB,UAAWR,EAAQC,cAAc,GAC1DD,EAAQQ,iBAAiB,QAASR,EAAQI,YAAY,GACtDJ,EAAQQ,iBAAiB,QAASR,EAAQM,YAAY,kCAGjDN,GACLA,EAAQS,oBAAoB,UAAWT,EAAQC,cAAc,GAC7DD,EAAQS,oBAAoB,QAAST,EAAQI,YAAY,GACzDJ,EAAQS,oBAAoB,QAAST,EAAQM,YAAY,UAElDN,EAAQC,oBACRD,EAAQI,kBACRJ,EAAQM,2CAGTI,EAAUxB,GACZwB,EAASC,iBAAiBzB,KAC5BwB,EAASZ,QAAQc,UAAW,EAC5BF,EAASZ,QAAQe,gBAGfb,EAAU5B,KACdsC,EAASI,cAAe,EAExBjB,EAAckB,OAAOC,SAAQ,SAAA1C,GACvBA,EAAE2C,MAAQ/B,EAAMgC,UAClBR,EAASI,cAAe,EACxBJ,EAASS,YAAY7C,EAAEJ,MAAMkD,eAAelC,EAAOc,qCAKnDU,EAAUxB,GACdwB,EAASW,YAAa,EACtBX,EAASL,MAAMxB,KAAKT,KAAMsC,EAAUxB,iCAGhCwB,EAAUxB,GACdoC,QAAQC,IAAI,aACRzB,EAAUY,EAASZ,WACvBwB,QAAQC,IAAIzB,EAAQ0B,MAChB1B,EAAQ0B,MAAQ1B,EAAQ0B,KAAKC,SAASvC,EAAMwC,QAAS,CACvDJ,QAAQC,IAAI,aACRI,EAAKzC,EAAMwC,WACfJ,QAAQC,IAAII,EAAGC,UACfN,QAAQC,IAAII,GACZzC,EAAM2C,iBACN3C,EAAM4C,kBAC+B,OAA9BH,EAAGC,SAASR,eAAwB,IACzCE,QAAQC,IAAI,gBACZI,EAAKA,EAAGI,WACRT,QAAQC,IAAII,EAAGC,UACfN,QAAQC,IAAII,IACPA,EAAI,CACPL,QAAQC,IAAI,eAGT,GAAII,IAAO7B,EAAQ0B,WACtBF,QAAQC,IAAI,SACN,IAAIS,MAAM,oDAIfL,cACHL,QAAQC,IAAI,aAIdzB,EAAQmC,kBAAkBN,EAAGO,aAAa,cAAehD,GACzDY,EAAQe,gBAGCf,EAAQqC,QAAQnC,UAAYF,EAAQqC,QAAQC,kBACrDd,QAAQC,IAAI,SACZzB,EAAQqC,QAAQC,iBAAkB,EAClCC,YAAW,kBAAMvC,EAAQe,6CAIvBH,EAAUxB,MACVwB,EAASW,aACXX,EAASW,YAAa,GAExBX,EAAS4B,gBAAgBlE,MAEpBc,EAAMgC,SAA6B,KAAlBhC,EAAMgC,aAEvBR,EAASZ,QAAQyC,aAAe7B,EAASZ,QAAQ0C,wBACpD9B,EAASZ,QAAQ0C,kBAAmB,EACpC9B,EAASI,cAAe,OACxBJ,EAASS,YAAT,MAA8BjC,EAAOd,UAIlCsC,EAASZ,QAAQc,YAChBF,EAASZ,QAAQ2C,iBACnB/B,EAASS,YAAYuB,YAAYxD,EAAOd,KAAM,QACzC,KACD8C,EAAUR,EAASiC,WAAWjC,EAAUtC,KAAMc,MAE9C0D,MAAM1B,KAAaA,EAAS,WAE5B2B,EAAUnC,EAASZ,QAAQgD,WAAW/E,MAAK,SAAA8E,UACtCA,EAAQE,WAAW,KAAO7B,UAGZ,IAAZ2B,GACTnC,EAASS,YAAYuB,YAAYxD,EAAOd,KAAMyE,GAMlDnC,EAASZ,QAAQqC,QAAQa,YAAYxE,OACrCkC,EAASZ,QAAQqC,QAAQc,WAAWC,qBAMlCxC,EAASZ,QAAQqC,QAAQU,SACzBnC,EAASZ,QAAQ2C,oBACS,IAA1B/B,EAASI,cACVJ,EAASZ,QAAQc,UAA8B,IAAlB1B,EAAMgC,UAEpCR,EAASZ,QAAQqD,YAAY/E,MAAM,6CAItBc,OACVd,KAAK0B,QAAQc,SAAU,OAAO,KAEa,IAA5CxC,KAAK0B,QAAQqC,QAAQa,YAAYxE,OAAc,KAC7C4E,GAAkB,SACtBvD,EAAckB,OAAOC,SAAQ,SAAA1C,GACvBY,EAAMgC,UAAY5C,EAAE2C,MAAKmC,GAAkB,OAGzCA,SAGH,qCAGE1C,EAAU2C,EAAInE,OAEnBY,EAAUY,EAASZ,QACnBwD,EAAOxD,EAAQyD,MAAMC,gBACvB,EACA1D,EAAQ0C,kBACR,EACA1C,EAAQyC,YACRzC,EAAQ2C,0BAGNa,GACKA,EAAKG,mBAAmBV,WAAW,2CAM9BM,QACTvD,QAAQqC,QAAQnC,QAAUqD,MAC3BC,EAAOlF,KAAK0B,QAAQyD,MAAMC,gBAC5B,EACApF,KAAK0B,QAAQ0C,kBACb,EACApE,KAAK0B,QAAQyC,YACbnE,KAAK0B,QAAQ2C,kBAGXa,SACGxD,QAAQqC,QAAQuB,aAAeJ,EAAKK,yBACpC7D,QAAQqC,QAAQa,YAAcM,EAAKN,iBACnClD,QAAQqC,QAAQyB,eAAiBN,EAAKO,4EAKtC,CACLnB,YAAa,SAACoB,EAAGT,EAAIR,OACf/C,EAAUiE,EAAKjE,QACnBA,EAAQqC,QAAQU,QAAUA,MAEtBmB,EAAiBlE,EAAQmD,WAAWlF,MAAK,SAAAkG,UACpCA,EAAKpB,UAAYA,KAG1B/C,EAAQqC,QAAQc,WAAae,EAG3BlE,EAAQqC,QAAQa,YAAYxE,QAC1BsB,EAAQqC,QAAQc,WAAWC,mBAC7BpD,EAAQuB,YAERvB,EAAQqD,YAAYE,GAAI,IAG5Ba,MAAO,SAACJ,EAAGT,GAELU,EAAKjE,QAAQc,UAAYmD,EAAKjE,QAAQqC,QAAQgC,gBAChDL,EAAEjC,iBACFiC,EAAEhC,kBACFO,YAAW,WACT0B,EAAKjE,QAAQmC,kBAAkB8B,EAAKjE,QAAQsE,aAAcN,GAC1DC,EAAKjE,QAAQe,aACZ,KAGPwD,OAAQ,SAACP,EAAGT,GACNU,EAAKjE,QAAQc,WACfkD,EAAEjC,iBACFiC,EAAEhC,kBACFiC,EAAKjE,QAAQc,UAAW,EACxBmD,EAAKjE,QAAQe,aAGjByD,IAAK,SAACR,EAAGT,GAEPU,EAAK5C,YAAY+C,MAAMJ,EAAGT,IAE5BkB,MAAO,SAACT,EAAGT,GACLU,EAAKjE,QAAQc,WACXmD,EAAKjE,QAAQ0E,kBACfT,EAAK5C,YAAY+C,MAAMJ,EAAGT,GAChBU,EAAKjE,QAAQyC,cACvBuB,EAAEhC,kBACFO,YAAW,WACT0B,EAAKjE,QAAQe,WACbkD,EAAKjE,QAAQc,UAAW,IACvB,MAIT6D,GAAI,SAACX,EAAGT,MAEFU,EAAKjE,QAAQc,UAAYmD,EAAKjE,QAAQqC,QAAQgC,cAAe,CAC/DL,EAAEjC,iBACFiC,EAAEhC,sBACE4C,EAAQX,EAAKjE,QAAQqC,QAAQgC,cAAc3F,OAC7CmG,EAAWZ,EAAKjE,QAAQsE,aAEtBM,EAAQC,GAAYA,EAAW,GACjCZ,EAAKjE,QAAQsE,eACbL,EAAKa,eACiB,IAAbD,IACTZ,EAAKjE,QAAQsE,aAAeM,EAAQ,EACpCX,EAAKa,cACLb,EAAKjE,QAAQ0B,KAAKqD,UAAYd,EAAKjE,QAAQ0B,KAAKsD,gBAItDC,KAAM,SAACjB,EAAGT,MAEJU,EAAKjE,QAAQc,UAAYmD,EAAKjE,QAAQqC,QAAQgC,cAAe,CAC/DL,EAAEjC,iBACFiC,EAAEhC,sBACE4C,EAAQX,EAAKjE,QAAQqC,QAAQgC,cAAc3F,OAAS,EACtDmG,EAAWZ,EAAKjE,QAAQsE,aAEtBM,EAAQC,GACVZ,EAAKjE,QAAQsE,eACbL,EAAKa,eACIF,IAAUC,IACnBZ,EAAKjE,QAAQsE,aAAe,EAC5BL,EAAKa,cACLb,EAAKjE,QAAQ0B,KAAKqD,UAAY,YAI5B,SAACf,EAAGT,GAERU,EAAKjE,QAAQc,UACbmD,EAAKjE,QAAQqC,QAAQa,YAAYxE,OAAS,EAE1CuF,EAAKjE,QAAQe,WACJkD,EAAKjE,QAAQc,UACtBmD,EAAKjE,QAAQqD,YAAYE,yCAMrB2B,OACNC,EAAM7G,KAAK0B,QAAQ0B,KAAK0D,iBAAiB,MAC3C1G,EAASyG,EAAIzG,SAAW,EAEtBwG,IAAO5G,KAAK0B,QAAQsE,aAAee,SAASH,QAE3C,IAAII,EAAI,EAAGA,EAAI5G,EAAQ4G,IAAK,KAC3BzD,EAAKsD,EAAIG,MACTA,IAAMhH,KAAK0B,QAAQsE,aAAc,CACnCzC,EAAG0D,UAAUC,IAAIlH,KAAK0B,QAAQqC,QAAQc,WAAWsC,iBAE7CC,EAAe7D,EAAG8D,wBAClBC,EAAiBtH,KAAK0B,QAAQ0B,KAAKiE,2BAEnCD,EAAaG,OAASD,EAAeC,OAAQ,KAC3CC,EAAiBJ,EAAaG,OAASD,EAAeC,YACrD7F,QAAQ0B,KAAKqD,WAAae,OAC1B,GAAIJ,EAAaK,IAAMH,EAAeG,IAAK,KAC5CD,EAAiBF,EAAeG,IAAML,EAAaK,SAClD/F,QAAQ0B,KAAKqD,WAAae,QAGjCjE,EAAG0D,UAAUS,OAAO1H,KAAK0B,QAAQqC,QAAQc,WAAWsC,oDAK5CQ,EAAMC,OACdC,EAASF,EAAKN,wBAAwBQ,UAEtCD,EAAe,KACbE,EAAQH,EAAKI,cAAgBnH,OAAOoH,iBAAiBL,UAEvDE,EAASI,WAAWH,EAAMI,WAAaD,WAAWH,EAAMK,qBAIrDN,yCAtWA,CACL,CACEhF,IAAK,EACL/C,MAAO,OAET,CACE+C,IAAK,EACL/C,MAAO,UAET,CACE+C,IAAK,GACL/C,MAAO,SAET,CACE+C,IAAK,GACL/C,MAAO,UAET,CACE+C,IAAK,GACL/C,MAAO,SAET,CACE+C,IAAK,GACL/C,MAAO,MAET,CACE+C,IAAK,GACL/C,MAAO,kBClCTsI,wBACQ1G,kBACLA,QAAUA,OACVA,QAAQ2G,WAAarI,UACrBoD,KAAOpD,KAAK0B,QAAQ0B,4CAGtBA,mBACEkF,eAAiBtI,KAAK0B,QAAQC,OAAO4G,MAAMxG,KAAK,KAAM/B,WACtDwI,yBAA2BxI,KAAKyI,UACnC,WACM9C,EAAKjE,QAAQc,UACfmD,EAAKjE,QAAQe,aAGjB,IACA,QAEGiG,kBAAoB1I,KAAKyI,UAC5B,WACM9C,EAAKjE,QAAQc,UACfmD,EAAKjE,QAAQe,aAGjB,IACA,QAIGf,QAAQyD,MACVwD,cACAvG,iBAAiB,gBAAiBpC,KAAKsI,gBAAgB,QACrD5G,QAAQyD,MACVwD,cACAvG,iBAAiB,YAAapC,KAAKsI,gBAAgB,GACtD1H,OAAOwB,iBAAiB,SAAUpC,KAAK0I,mBAEnC1I,KAAK4I,mBACFA,cAAcxG,iBACjB,SACApC,KAAKwI,0BACL,GAGF5H,OAAOwB,iBAAiB,SAAUpC,KAAKwI,yDAIpCpF,QACA1B,QAAQyD,MACVwD,cACAtG,oBAAoB,YAAarC,KAAKsI,gBAAgB,QACpD5G,QAAQyD,MACVwD,cACAtG,oBAAoB,gBAAiBrC,KAAKsI,gBAAgB,GAC7D1H,OAAOyB,oBAAoB,SAAUrC,KAAK0I,mBAEtC1I,KAAK4I,mBACFA,cAAcvG,oBACjB,SACArC,KAAKwI,0BACL,GAGF5H,OAAOyB,oBAAoB,SAAUrC,KAAKwI,2DAIrCK,EAAMC,EAAMC,OACfC,4BACG,eACDC,EAAUC,EACZC,EAAO7I,EAKL8I,EAAUL,IAAcC,EAC5BK,aAAaL,GACbA,EAAU/E,YANE,WACV+E,EAAU,KACLD,GAAWF,EAAKS,MAAML,EAASE,KAIVL,GACxBM,GAASP,EAAKS,MAAML,EAASE,aC7EjCI,wBACU7H,kBACHA,QAAUA,OACVA,QAAQyD,MAAQnF,yDAIjBwJ,SACAxJ,KAAK0B,QAAQqC,QAAQc,aACrB2E,EAASxJ,KAAK0B,QAAQqC,QAAQc,WAAW2E,QAGxCA,EAIEA,EAAOC,cAAcpI,SAHjBA,qDAMKqI,OAEZC,EADAV,EAAUjJ,KAAK0B,QAAQqC,QAGvBmB,EAAOlF,KAAKoF,gBAAe,EAAOpF,KAAK0B,QAAQ0C,kBAAkB,EAAMpE,KAAK0B,QAAQyC,YAAanE,KAAK0B,QAAQ2C,0BAE9F,IAATa,EAAsB,KAEzBlF,KAAK0B,QAAQkI,8BACRlI,QAAQ0B,KAAK0E,MAAM+B,2BASxBF,EALC3J,KAAK8J,kBAAkBb,EAAQrH,SAKlB5B,KAAK+J,gCAAgC7E,EAAK8E,iBAJ1ChK,KAAKiK,oCAAoCjK,KAAK0B,QAAQqC,QAAQnC,QACxEsD,EAAK8E,sBAMRtI,QAAQ0B,KAAK0E,MAAM+B,uBAAkBF,EAAYlC,+DACrBkC,EAAYO,iEACXP,EAAYQ,mEACXR,EAAYpC,wEACRoC,EAAYS,WAAa,oEAC1BT,EAAYU,UAAY,mEACzBV,EAAYW,UAAY,sEAGpC,SAArBX,EAAYO,YACPxI,QAAQ0B,KAAK0E,MAAMoC,KAAO,QAGX,SAApBP,EAAYlC,WACP/F,QAAQ0B,KAAK0E,MAAML,IAAM,QAG9BiC,GAAU1J,KAAKuK,2BAGd7I,QAAQ0B,KAAK0E,MAAM+B,QAAU,sDAS5BW,EAAeC,EAAMC,OAC3BvF,EACAwC,EAAO6C,KAEPC,MACK,IAAIzD,EAAI,EAAGA,EAAIyD,EAAKrK,OAAQ4G,IAAK,SAErB7F,KADbwG,EAAOA,EAAKgD,WAAWF,EAAKzD,iBAIrBW,EAAKvH,OAASsK,GACjBA,GAAU/C,EAAKvH,OACfuH,EAAOA,EAAKiD,YAEe,IAA3BjD,EAAKgD,WAAWvK,QAAiBuH,EAAKvH,SACtCuH,EAAOA,EAAKkD,qBAIpBC,EAAM9K,KAAK+K,sBAEf5F,EAAQnF,KAAK2I,cAAcqC,eACrBC,SAAStD,EAAM+C,GACrBvF,EAAM+F,OAAOvD,EAAM+C,GACnBvF,EAAMgG,UAAS,OAGXL,EAAIM,kBACN,MAAOC,IAETP,EAAIQ,SAASnG,GACbqF,EAAce,mDAGCC,EAAMC,EAAqBrH,EAAkBsH,EAAe7F,OACvEX,EAAOlF,KAAKoF,gBAAe,EAAMhB,EAAkBqH,EAAqBzL,KAAK0B,QAAQyC,YAAanE,KAAK0B,QAAQ2C,0BAEtGlD,IAAT+D,EAAoB,KAChB+D,EAAUjJ,KAAK0B,QAAQqC,QACvB4H,EAAe,IAAI9K,YAAY,mBAAoB,CACnDK,OAAQ,CACJ2E,KAAMA,EACNvD,SAAU2G,EACVA,QAAS/D,EACTpE,MAAO4K,QAIV1L,KAAK8J,kBAAkBb,EAAQrH,SAe7B,CAKH4J,GAH0D,iBAAlCxL,KAAK0B,QAAQkK,kBAC/B5L,KAAK0B,QAAQkK,kBACb,QAEFC,EAAS3G,EAAK8E,gBAAkB9E,EAAKN,YAAYxE,OAChDJ,KAAK0B,QAAQ2C,mBACdwH,GAAU3G,EAAKG,mBAAmBjF,aAEjC0L,UAAUN,EAAMtG,EAAK8E,gBAAiB6B,OAzBD,KACtCE,EAAU/L,KAAK0B,QAAQqC,QAAQnC,QAC/BoK,EAAsD,iBAAlChM,KAAK0B,QAAQkK,kBAC/B5L,KAAK0B,QAAQkK,kBACb,IACNJ,GAAQQ,MACJC,EAAW/G,EAAK8E,gBAChB6B,EAAS3G,EAAK8E,gBAAkB9E,EAAKN,YAAYxE,QAAyB,KAAf4L,EAAoB,EAAIA,EAAW5L,QAC7FJ,KAAK0B,QAAQ2C,mBACdwH,GAAU3G,EAAKG,mBAAmBjF,OAAS,GAE/C2L,EAAQjM,MAAQiM,EAAQjM,MAAMoM,UAAU,EAAGD,GAAYT,EACnDO,EAAQjM,MAAMoM,UAAUL,EAAQE,EAAQjM,MAAMM,QAClD2L,EAAQI,eAAiBF,EAAWT,EAAKpL,OACzC2L,EAAQK,aAAeH,EAAWT,EAAKpL,OAc3C6I,EAAQrH,QAAQyK,cAAc,IAAIxL,YAAY,QAAS,CAAEG,SAAS,KAClEiI,EAAQrH,QAAQyK,cAAcV,sCAI5BW,EAAML,EAAUJ,OAClB1G,EAAO2F,EACXA,EAAM9K,KAAK+K,sBACX5F,EAAQnF,KAAK2I,cAAcqC,eACrBC,SAASH,EAAIyB,WAAYN,GAC/B9G,EAAM+F,OAAOJ,EAAIyB,WAAYV,GAC7B1G,EAAMqH,qBAEFvH,EAAKjF,KAAK2I,cAAc8D,cAAc,OAC1CxH,EAAGyH,UAAYJ,UAEXK,EAAMC,EADNC,EAAO7M,KAAK2I,cAAcmE,yBAEtBH,EAAO1H,EAAG8H,YACdH,EAAWC,EAAKG,YAAYL,GAEhCxH,EAAM8H,WAAWJ,GAGbD,KACAzH,EAAQA,EAAM+H,cACRC,cAAcP,GACpBzH,EAAMgG,UAAS,GACfL,EAAIM,kBACJN,EAAIQ,SAASnG,wDAKbnF,KAAK0B,QAAQmD,WAAW2E,OACjBxJ,KAAK0B,QAAQmD,WAAW2E,OAAOC,cAAc2D,eAGjDxM,OAAOwM,+DAGMxL,MACO,OAAvBA,EAAQ+B,kBACD,MAGN,IAAIqD,EAAI,EAAGA,EAAIpF,EAAQ+B,WAAWgH,WAAWvK,OAAQ4G,IAAK,IAChDpF,EAAQ+B,WAAWgH,WAAW3D,KAE5BpF,SACFoF,0DAKYqG,OACvBvC,EAAM9K,KAAK+K,qBACXxE,EAAWuE,EAAIyB,WACf9B,EAAO,MAGK,MAAZlE,EAAkB,SACdS,EACAsG,EAAK/G,EAASgH,gBACE,OAAbhH,GAA4B,SAAP+G,GACxBtG,EAAIhH,KAAKwN,wBAAwBjH,GACjCkE,EAAKgD,KAAKzG,GAEO,QADjBT,EAAWA,EAAS5C,cAEhB2J,EAAK/G,EAASgH,wBAGtB9C,EAAKiD,UAKE,CACHnH,SAAUA,EACVkE,KAAMA,EACNC,OALKI,EAAI6C,WAAW,GAAGC,6EAW3B3E,EAAUjJ,KAAK0B,QAAQqC,QACvByH,EAAO,MAENxL,KAAK8J,kBAAkBb,EAAQrH,SAS7B,KACCiM,EAAe7N,KAAK+K,qBAAqBwB,cAEzB,MAAhBsB,EAAsB,KAClBC,EAAqBD,EAAaE,YAClCC,EAAoBhO,KAAK+K,qBAAqB4C,WAAW,GAAGC,YAE5DE,GAAsBE,GAAqB,IAC3CxC,EAAOsC,EAAmB5B,UAAU,EAAG8B,SAjBL,KACtCC,EAAgBjO,KAAK0B,QAAQqC,QAAQnC,WACrCqM,EAAe,KACXhC,EAAWgC,EAAc9B,eACzB8B,EAAcnO,OAASmM,GAAY,IACnCT,EAAOyC,EAAcnO,MAAMoM,UAAU,EAAGD,YAiB7CT,4CAGOA,OACV0C,SAEAA,EADAlO,KAAK0B,QAAQyM,sBACA3C,EAAK4C,MAAMpO,KAAK0B,QAAQyM,uBAExB3C,EAAK4C,MAAM,QAEXF,EAAW9N,OAAS,0CAI1BiO,EAAmBjK,EAAkBqH,EAAqBtH,EAAamK,OAE9E/H,EAAUkE,EAAMC,SADhB2C,EAAMrN,KAAK0B,QAAQqC,WAGlB/D,KAAK8J,kBAAkBuD,EAAIzL,SAEzB,KACC2M,EAAgBvO,KAAKwO,+BAA+BnB,GAEpDkB,IACAhI,EAAWgI,EAAchI,SACzBkE,EAAO8D,EAAc9D,KACrBC,EAAS6D,EAAc7D,aAP3BnE,EAAWvG,KAAK0B,QAAQqC,QAAQnC,YAWhC6M,EAAiBzO,KAAK0O,mCACtBC,EAA2B3O,KAAK4O,kBAAkBH,MAElDH,QACO,CACHtE,gBAAiByE,EAAerO,OAASuO,EAAyBvO,OAClEwE,YAAa+J,EACbE,uBAAwBtI,EACxBhB,oBAAqBkF,EACrBhF,sBAAuBiF,MAI3B+D,MAAAA,EAAyD,KAErDnK,EADAwK,GAA4B,UAG3BpN,QAAQmD,WAAWjC,SAAQ,SAAAmM,OACxBC,EAAID,EAAOtK,QACXwK,EAAMF,EAAOtD,oBACb9F,EAAKuJ,0BAA0BT,EAAgBO,GAC/CP,EAAeU,YAAYH,GAE3BC,EAAMH,IACNA,EAA2BG,EAC3B3K,EAAc0K,EACdvD,EAAsBsD,EAAOtD,wBAIjCqD,GAA4B,IAEK,IAA7BA,IACCrD,GACD,KAAK2D,KACDX,EAAevC,UACX4C,EAA2B,EAC3BA,KAGd,KACMO,EAAwBZ,EAAevC,UAAU4C,EAA2BxK,EAAYlE,OACxFqO,EAAerO,QAEnBkE,EAAcmK,EAAevC,UAAU4C,EAA0BA,EAA2BxK,EAAYlE,YACpGkP,EAAmBD,EAAsBnD,UAAU,EAAG,GACtDqD,EAAeF,EAAsBjP,OAAS,IAErB,MAArBkP,GACqB,MAArBA,GAEJlL,IACAiL,EAAwBA,EAAsBG,YAG9CC,EAAQtL,EAAc,UAAY,oBAEjCzC,QAAQ0C,iBAAmBqL,EAAML,KAAKC,IAEtCE,IAAiBlB,IAAuBoB,EAAML,KAAKC,UAC7C,CACHrF,gBAAiB8E,EACjBlK,YAAayK,EACbR,uBAAwBtI,EACxBhB,oBAAqBkF,EACrBhF,sBAAuBiF,EACvBrF,mBAAoBf,uDAOboL,EAAKjL,WACxBkL,EAAcD,EAAItB,MAAM,IAAIV,UAAUkC,KAAK,IAC3ChJ,GAAS,EAEJiJ,EAAO,EAAG1P,EAAMuP,EAAItP,OAAQyP,EAAO1P,EAAK0P,IAAQ,SACjDC,EAAYD,IAASH,EAAItP,OAAS,EAClCmP,EAAe,KAAKH,KAAKO,EAAYE,EAAO,IAE5CE,GAAQ,EACHC,EAAavL,EAAQrE,OAAS,EAAG4P,GAAc,EAAGA,OACrDvL,EAAQuL,KAAgBL,EAAYE,EAAKG,GAAa,CACxDD,GAAQ,WAKRA,IAAUD,GAAaP,GAAe,CACtC3I,EAAQ8I,EAAItP,OAAS,EAAIyP,gBAK1BjJ,4CAGOhF,SACc,UAArBA,EAAQ4B,UAA6C,aAArB5B,EAAQ4B,iDAGnCmG,EAAasG,OACrBC,EAActP,OAAOuP,WACrBC,EAAexP,OAAOyP,YACtBC,EAAMjP,SAASkP,gBACfC,GAAc5P,OAAO6P,aAAeH,EAAII,aAAeJ,EAAIK,YAAc,GACzEC,GAAahQ,OAAOiQ,aAAeP,EAAI7J,YAAc6J,EAAIQ,WAAa,GAEtEC,EAAqC,iBAApBpH,EAAYlC,IAAmBkC,EAAYlC,IAAMmJ,EAAYR,EAAezG,EAAYpC,OAAS0I,EAAepI,OACjImJ,EAAyC,iBAAtBrH,EAAYQ,MAAqBR,EAAYQ,MAAQR,EAAYO,KAAO+F,EAAegB,MAC1GC,EAA2C,iBAAvBvH,EAAYpC,OAAsBoC,EAAYpC,OAASoC,EAAYlC,IAAMwI,EAAepI,OAC5GsJ,EAAuC,iBAArBxH,EAAYO,KAAoBP,EAAYO,KAAOsG,EAAaN,EAAcvG,EAAYQ,MAAQ8F,EAAegB,YAEhI,CACHxJ,IAAKsJ,EAAUK,KAAKC,MAAMT,GAC1BzG,MAAO6G,EAAYI,KAAKE,KAAKd,EAAaN,GAC1C3I,OAAQ2J,EAAaE,KAAKE,KAAKV,EAAYR,GAC3ClG,KAAMiH,EAAWC,KAAKC,MAAMb,oDAQ5Be,EAAa,CACbN,MAAO,KACPpJ,OAAQ,kBAGPnG,QAAQ0B,KAAK0E,MAAM+B,gRAMzB0H,EAAWN,MAAQjR,KAAK0B,QAAQ0B,KAAKoO,YACrCD,EAAW1J,OAAS7H,KAAK0B,QAAQ0B,KAAKqO,kBAEjC/P,QAAQ0B,KAAK0E,MAAM+B,yBAEjB0H,8DAG0B3P,EAAS0I,EAAUoH,OAa/CC,EAAM3R,KAAK2I,cAAc8D,cAAc,OAC3CkF,EAAIC,GAAK,gDACJjJ,cAAckJ,KAAK7E,YAAY2E,OAEhC7J,EAAQ6J,EAAI7J,MACZgK,EAAWlR,OAAOoH,iBAAmBA,iBAAiBpG,GAAWA,EAAQmG,aAE7ED,EAAMiK,WAAa,WACM,UAArBnQ,EAAQ4B,WACRsE,EAAMkK,SAAW,cAGrBlK,EAAMwC,SAAW,WACjBxC,EAAMmK,WAAa,SAzBF,CAAC,YAAa,YAAa,QAAS,SAAU,YAC3D,YAAa,iBAAkB,mBAC/B,oBAAqB,kBAAmB,cAAe,aACvD,eAAgB,gBAAiB,cACjC,YAAa,cAAe,aAAc,cAC1C,WAAY,iBAAkB,aAAc,aAC5C,YAAa,gBAAiB,aAC9B,iBAAkB,gBAAiB,eAqB5BrP,SAAQ,SAAAsP,GACfpK,EAAMoK,GAAQJ,EAASI,UAYvBC,EAAQ9Q,SAASoL,cAAc,QACnC0F,EAAMpE,YAAenM,EAAQ9B,MAAMoM,UAAU,EAAG5B,GAChDqH,EAAI3E,YAAYmF,GAES,UAArBvQ,EAAQ4B,WACRmO,EAAI5D,YAAc4D,EAAI5D,YAAYqE,QAAQ,MAAO,UAKjDC,EAAOrS,KAAK2I,cAAc8D,cAAc,QAE5C4F,EAAKtE,YAAc,WACnB4D,EAAI3E,YAAYqF,OAEZC,EAAQtS,KAAK2I,cAAc8D,cAAc,QAC7C6F,EAAMvE,YAAcnM,EAAQ9B,MAAMoM,UAAU5B,GAC5CqH,EAAI3E,YAAYsF,OAEZC,EAAO3Q,EAAQyF,wBAKnBsK,EAAI7J,MAAMwC,SAAW,QACrBqH,EAAI7J,MAAMoC,KAAOqI,EAAKrI,KAAO,KAC7ByH,EAAI7J,MAAML,IAAM8K,EAAK9K,IAAM,KAC3BkK,EAAI7J,MAAMmJ,MAAQsB,EAAKtB,MAAQ,KAC/BU,EAAI7J,MAAMD,OAAS0K,EAAK1K,OAAS,KACjC8J,EAAIlL,UAAY7E,EAAQ6E,cAEpB+L,EAAWH,EAAKhL,oCACfsB,cAAckJ,KAAKY,YAAYd,GAC7B3R,KAAK0S,kCAAkCF,2DAGlBG,OACxBxN,EACA2F,EAAM9K,KAAK+K,sBAEf5F,EAAQnF,KAAK2I,cAAcqC,eACrBC,SAASH,EAAIyB,WAAYoG,GAC/BxN,EAAM+F,OAAOJ,EAAIyB,WAAYoG,GAE7BxN,EAAMgG,UAAS,OAEXoH,EAAOpN,EAAMkC,+BAEVrH,KAAK0S,kCAAkCH,6DAGhBA,OAC1B5I,EAAc,CACdW,SAAU,QACVJ,KAAMqI,EAAKrI,KACXzC,IAAK8K,EAAK9K,IAAM8K,EAAK1K,QAGrBoI,EAAiBjQ,KAAK4S,oBAEtBC,EAAsBN,EAAK9K,IAC3BqL,EAAyBlS,OAAOyP,aAAekC,EAAK9K,IAAM8K,EAAK1K,QAG/DiL,EAAyB7C,EAAepI,SACtCgL,GAAuB5C,EAAepI,QAAUgL,EAAsBC,GACxEnJ,EAAYlC,IAAM,OAClBkC,EAAYpC,OAAS3G,OAAOyP,YAAckC,EAAK9K,IAC3CqL,EAAyB7C,EAAepI,SAC1C8B,EAAYS,UAAYyI,IAGtBA,EAAsB5C,EAAepI,SACvC8B,EAAYS,UAAY0I,QAK1BC,EAAuBR,EAAKrI,KAC5B8I,EAAwBpS,OAAOuP,WAAaoC,EAAKrI,YAGjD8I,EAAwB/C,EAAegB,QACrC8B,GAAwB9C,EAAegB,OAAS8B,EAAuBC,GACzErJ,EAAYO,KAAO,OACnBP,EAAYQ,MAAQvJ,OAAOuP,WAAaoC,EAAKrI,KACzC8I,EAAwB/C,EAAegB,QACzCtH,EAAYU,SAAW0I,IAGrBA,EAAuB9C,EAAegB,QACxCtH,EAAYU,SAAW2I,IAKtBrJ,yCAGIhC,OAEPsL,EAEAvN,EAAI1F,KAAKoD,aAEI,IAANsC,aAEWvE,IAAf8R,GAAkD,IAAtBA,EAAWpL,WAGhB,KAF1BoL,EAAavN,EAAE2B,yBAEAQ,cAED1G,KADVuE,EAAIA,EAAEiF,WAAW,MACOjF,EAAE2B,kCAM9B6L,EAAUD,EAAWxL,IACrB0L,EAAaD,EAAUD,EAAWpL,UAElCqL,EAAU,EACVtS,OAAO8I,SAAS,EAAG9I,OAAOiQ,YAAcoC,EAAWxL,IAtBhC,SAuBhB,GAAI0L,EAAavS,OAAOyP,YAAa,KACpC+C,EAAOxS,OAAOiQ,YAAcoC,EAAWxL,IAxBxB,GA0Bf2L,EAAOxS,OAAOiQ,YAxBM,MAyBpBuC,EAAOxS,OAAOiQ,YAzBM,SA4BpBwC,EAAUzS,OAAOiQ,aAAejQ,OAAOyP,YAAc8C,GAErDE,EAAUD,IACVC,EAAUD,GAGdxS,OAAO8I,SAAS,EAAG2J,wDA/hBhBrT,KAAK0B,QAAQkH,gBAAkBvH,SAASwQ,OAAS7R,KAAK0B,QAAQkH,uBCnEvE0K,wBACU5R,kBACHA,QAAUA,OACVA,QAAQ6R,OAASvT,oDAGbwT,EAASC,qBACXA,EAAMC,QAAO,SAAAC,UACThO,EAAKyJ,KAAKoE,EAASG,mCAI7BH,EAASG,UAC6B,OAAhC3T,KAAK+P,MAAMyD,EAASG,iCAGzBH,EAASG,EAAQC,GACnBA,EAAOA,GAAQ,GAGLD,EAAOvT,WAGbyT,EAAMD,EAAKC,KAAO,GAClBC,EAAOF,EAAKE,MAAQ,GACpBC,EAAgBH,EAAKI,eAAiBL,GAAUA,EAAO3Q,iBAGvD4Q,EAAKK,WACE,CAACC,SAAUP,EAAQQ,MAAO,GAGrCX,EAAUI,EAAKI,eAAiBR,GAAWA,EAAQxQ,kBAE/CoR,EAAepU,KAAKqU,SAASN,EAAeP,EAAS,EAAG,EAAG,WAC1DY,EAGE,CACHF,SAAUlU,KAAKsU,OAAOX,EAAQS,EAAaG,MAAOV,EAAKC,GACvDK,MAAOC,EAAaD,OAJb,sCAQNR,EAAQH,EAASgB,EAAaC,EAAcL,MAC7CpU,KAAK0B,QAAQyM,wBAEbqF,EAAUA,EAAQpF,MAAMpO,KAAK0B,QAAQyM,uBAAuBuG,QAAQ,GAAG,IAGvElB,EAAQpT,SAAWqU,QAGZ,CACHN,MAAOnU,KAAK2U,eAAeP,GAC3BG,MAAOH,EAAaQ,cAKxBjB,EAAOvT,SAAWoU,GAAehB,EAAQpT,OAASqU,EAAed,EAAOvT,OAASoU,YAMjFK,EAAMC,EAFN9F,EAAIwE,EAAQiB,GACZ7N,EAAQ+M,EAAOoB,QAAQ/F,EAAGwF,GAGvB5N,GAAS,GAAG,IACfwN,EAAa3G,KAAK7G,GAClBkO,EAAO9U,KAAKqU,SAASV,EAAQH,EAAS5M,EAAQ,EAAG6N,EAAe,EAAGL,GACnEA,EAAaY,OAGRF,SACMD,IAGNA,GAAQA,EAAKV,MAAQW,EAAKX,SAC3BU,EAAOC,GAGXlO,EAAQ+M,EAAOoB,QAAQ/F,EAAGpI,EAAQ,UAG/BiO,0CAGIT,OACPD,EAAQ,EACRW,EAAO,SAEXV,EAAaxR,SAAQ,SAACgE,EAAOI,GACrBA,EAAI,IACAoN,EAAapN,EAAI,GAAK,IAAMJ,EAC5BkO,GAAQA,EAAO,EAGfA,EAAO,GAIfX,GAASW,KAGNX,iCAGJR,EAAQsB,EAASpB,EAAKC,OACrBI,EAAWP,EAAOzH,UAAU,EAAG+I,EAAQ,WAE3CA,EAAQrS,SAAQ,SAACgE,EAAOI,GACpBkN,GAAYL,EAAMF,EAAO/M,GAASkN,EAC9BH,EAAOzH,UAAUtF,EAAQ,EAAIqO,EAAQjO,EAAI,GAAMiO,EAAQjO,EAAI,GAAK2M,EAAOvT,WAGxE8T,iCAGJV,EAAS0B,EAAKtB,qBACjBA,EAAOA,GAAQ,GACRsB,EACFC,QAAO,SAACC,EAAMxT,EAASqN,EAAKiG,OACrBxF,EAAM9N,EAENgS,EAAKyB,WACL3F,EAAMkE,EAAKyB,QAAQzT,MAGf8N,EAAM,SAIVwE,EAAWhL,EAAK6G,MAAMyD,EAAS9D,EAAKkE,UAExB,MAAZM,IACAkB,EAAKA,EAAKhV,QAAU,CAChBuT,OAAQO,EAASA,SACjBC,MAAOD,EAASC,MAChBvN,MAAOqI,EACPqG,SAAU1T,IAIXwT,IACR,IAENG,MAAK,SAACC,EAAGC,OACFC,EAAUD,EAAEtB,MAAQqB,EAAErB,aACtBuB,GACGF,EAAE5O,MAAQ6O,EAAE7O,sDCvEH+O,aAxExBC,OAAAA,aAAS,WACTC,oBAAAA,aAAsB,WACtBrM,OAAAA,aAAS,WACTrC,YAAAA,aAAc,kBACd2O,eAAAA,aAAiB,0BACjBC,UAAAA,aAAY,SACZtR,QAAAA,aAAU,UACVJ,iBAAAA,oBACA8J,sBAAAA,aAAwB,WACxB6H,eAAAA,aAAiB,WACjBC,iBAAAA,aAAmB,WACnBC,OAAAA,aAAS,YACTC,SAAAA,aAAW,cACXtR,WAAAA,aAAa,WACb+D,cAAAA,aAAgB,WAChBwN,gBAAAA,aAAkB,WAClB3K,oBAAAA,oBACAtH,YAAAA,oBACAyH,kBAAAA,aAAoB,WACpBhC,aAAAA,oBACAxD,kBAAAA,oBACAiQ,WAAAA,aAAa,SACbC,cAAAA,cAAgB,YAChBxR,kBAAAA,eAAoB,uBAEfT,iBAAmBA,OACnB8J,sBAAwBA,OACxBnI,aAAe,OACfjC,QAAU,QACVd,YAAa,OACbT,UAAW,OACXoG,cAAgBA,OAChBzE,YAAcA,OACdyH,kBAAoBA,OACpBhC,aAAeA,OACfxF,kBAAmB,OACnBgC,kBAAoBA,EAErBpG,KAAKqE,mBACPI,EAAU,GACVN,GAAc,GAGZyR,OACG/Q,WAAa,CAChB,CAEEJ,QAASA,EAGT+E,OAAQA,EAGRrC,YAAaA,EAGb2O,eAAgBA,EAGhBC,UAAWA,EAGXC,gBACEA,GAAkBO,EAAQC,uBAC1BzU,KAAK/B,MAGPiW,kBACEA,GAAoBM,EAAQE,yBAC5B1U,KAAK/B,MAGPoW,iBAAkBT,EAefS,EAdgB,iBAANT,EACQ,KAAbA,EAAEnG,OAAsB,KACrBmG,EAEQ,mBAANA,EACFA,EAAE5T,KAAK4D,GAIdyQ,GACA,iBACS,4BACPrU,KAAK4D,IAKXuQ,OAAQA,EAGRC,SAAUA,EAGVP,OAAQA,EAGRC,oBAAqBA,EAErBpK,oBAAqBA,EAErB4K,WAAYA,EAEZC,cAAeA,GAEfxR,kBAAmBA,SAGlB,CAAA,IAAID,QA8CH,IAAIjB,MAAM,sCA7CZ5D,KAAKqE,kBACPnB,QAAQwT,KACN,mEAEC7R,WAAaA,EAAW8R,KAAI,SAAA9Q,SACxB,CACLpB,QAASoB,EAAKpB,SAAWA,EACzB+E,OAAQ3D,EAAK2D,QAAUA,EACvBrC,YAAatB,EAAKsB,aAAeA,EACjC2O,eAAgBjQ,EAAKiQ,gBAAkBA,EACvCC,UAAWlQ,EAAKkQ,WAAaA,EAC7BC,gBACEnQ,EAAKmQ,gBAAkBO,EAAQC,uBAC/BzU,KAAK4D,GACPsQ,kBACEpQ,EAAKoQ,kBAAoBM,EAAQE,yBACjC1U,KAAK4D,GAEPyQ,gBAAkB,SAAAT,SACC,iBAANA,EACQ,KAAbA,EAAEnG,OAAsB,KACrBmG,EAEQ,mBAANA,EACFA,EAAE5T,KAAK4D,GAIdyQ,GACA,iBACS,4BACPrU,KAAK4D,GAbO,CAefyQ,GACHF,OAAQrQ,EAAKqQ,QAAUA,EACvBC,SAAUtQ,EAAKsQ,UAAYA,EAC3BP,OAAQ/P,EAAK+P,OACbC,oBAAqBhQ,EAAKgQ,oBAC1BpK,oBAAqB5F,EAAK4F,oBAC1B4K,WAAYxQ,EAAKwQ,YAAcA,EAC/BC,cAAezQ,EAAKyQ,eAAiBA,GACrCxR,kBAAmBe,EAAKf,mBAAqBA,WAO/CyE,EAAavJ,UACbyB,EAAczB,UACdoI,EAAkBpI,UAClBsT,EAActT,0DA4CXA,KAAK6E,WAAW8R,KAAI,SAAA5H,UAClBA,EAAOtK,0CAIXQ,OACAA,QACG,IAAIrB,MAAM,qDAII,oBAAXgT,QAA0B3R,aAAc2R,SACjD3R,EAAKA,EAAG4R,OAKR5R,EAAG6R,cAAgBC,UACnB9R,EAAG6R,cAAgBE,gBACnB/R,EAAG6R,cAAgBrX,cAEfW,EAAS6E,EAAG7E,OACP4G,EAAI,EAAGA,EAAI5G,IAAU4G,OACvBiQ,QAAQhS,EAAG+B,cAGbiQ,QAAQhS,mCAITA,GACFA,EAAGiS,aAAa,iBAClBhU,QAAQwT,KAAK,gCAAkCzR,EAAGzB,eAG/C2T,eAAelS,QACftD,OAAOI,KAAKkD,GACjBA,EAAGmS,aAAa,gBAAgB,0CAGnBxV,OAC2C,IAApD2U,EAAQc,aAAatC,QAAQnT,EAAQ4B,YAClC5B,EAAQ2L,sBACL,IAAI3J,MAAM,4BAA8BhC,EAAQ4B,SAAW,4DAK5DsS,OACLwB,EAAUtX,KAAKmF,MAAMwD,cAAc8D,cAAc,OACnD8K,EAAKvX,KAAKmF,MAAMwD,cAAc8D,cAAc,aAC9C6K,EAAQE,UAAY1B,EACpBwB,EAAQtK,YAAYuK,GAEhBvX,KAAK4I,cACA5I,KAAK4I,cAAcoE,YAAYsK,GAGjCtX,KAAKmF,MAAMwD,cAAckJ,KAAK7E,YAAYsK,uCAGvC1V,EAAS8H,kBAGjB1J,KAAKwC,UACLxC,KAAK+D,QAAQnC,UAAYA,GACzB5B,KAAK+D,QAAQa,cAAgB5E,KAAKyX,iCAI/BA,2BAA6BzX,KAAK+D,QAAQa,YAG1C5E,KAAKoD,YACHA,KAAOpD,KAAK0X,WAAW1X,KAAK+D,QAAQc,WAAWiR,gBACpDlU,EAAQ+V,YAAc3X,KAAKoD,UACtBiF,WAAWtG,KAAK/B,KAAKoD,YAGvBZ,UAAW,OACXwD,aAAe,EAEfhG,KAAK+D,QAAQa,mBACXb,QAAQa,YAAc,QAGvBgT,EAAgB,SAAAhC,MAEf1M,EAAK1G,cAINqV,EAAQ3O,EAAKqK,OAAOG,OAAOxK,EAAKnF,QAAQa,YAAagR,EAAQ,CAC/D/B,IAAK3K,EAAKnF,QAAQc,WAAWwR,WAAWxC,KAAO,SAC/CC,KAAM5K,EAAKnF,QAAQc,WAAWwR,WAAWvC,MAAQ,UACjDG,KAAM/K,EAAKnF,QAAQc,WAAWwR,WAAWpC,KACzCoB,QAAS,SAAApQ,MACuC,iBAAnCiE,EAAKnF,QAAQc,WAAWqR,cAC1BjR,EAAGiE,EAAKnF,QAAQc,WAAWqR,QAC7B,GAA8C,mBAAnChN,EAAKnF,QAAQc,WAAWqR,cACjChN,EAAKnF,QAAQc,WAAWqR,OAAOjR,EAAIiE,EAAKnF,QAAQa,mBAEjD,IAAIhB,MACR,mEAMJsF,EAAKnF,QAAQc,WAAWyR,gBAC1BuB,EAAQA,EAAMjD,MAAM,EAAG1L,EAAKnF,QAAQc,WAAWyR,gBAGjDpN,EAAKnF,QAAQgC,cAAgB8R,MAEzBN,EAAKrO,EAAK9F,KAAK0U,cAAc,UAE5BD,EAAMzX,OAAQ,KACb2X,EAAe,IAAIlX,YAAY,mBAAoB,CACrDK,OAAQgI,EAAK9F,cAEf8F,EAAKnF,QAAQnC,QAAQyK,cAAc0L,QAEmB,mBAA5C7O,EAAKnF,QAAQc,WAAWuR,kBAC7BlN,EAAKnF,QAAQc,WAAWuR,oBAC1BlN,EAAKnF,QAAQc,WAAWuR,gBAEzBlN,EAAKzG,YAE8C,mBAA5CyG,EAAKnF,QAAQc,WAAWuR,gBAC1BmB,EAAG7K,UAAYxD,EAAKnF,QAAQc,WAAWuR,kBACvCmB,EAAG7K,UAAYxD,EAAKnF,QAAQc,WAAWuR,gBAC1ClN,EAAK/D,MAAM6S,oBAAoBtO,KAMrC6N,EAAG7K,UAAY,OACXuL,EAAW/O,EAAK/D,MAAMwD,cAAcmE,yBAExC+K,EAAMjV,SAAQ,SAACiD,EAAMe,OACfrD,EAAK2F,EAAK/D,MAAMwD,cAAc8D,cAAc,MAChDlJ,EAAG6T,aAAa,aAAcxQ,GAC9BrD,EAAGiU,UAAYtO,EAAKnF,QAAQc,WAAWkR,UACvCxS,EAAGnB,iBAAiB,aAAa,SAAAsD,WACbwD,EAAKgP,cAAcxS,EAAEpC,WAA9BsD,cACW,IAAhBlB,EAAEyS,WACJjP,EAAKvH,OAAO6E,YAAYI,MAGxBsC,EAAKlD,eAAiBY,GACxBrD,EAAG0D,UAAUC,IAAIgC,EAAKnF,QAAQc,WAAWsC,aAE3C5D,EAAGmJ,UAAYxD,EAAKnF,QAAQc,WAAWoR,iBAAiBpQ,GACxDoS,EAASjL,YAAYzJ,MAEvBgU,EAAGvK,YAAYiL,GAEf/O,EAAK/D,MAAM6S,oBAAoBtO,KAGa,mBAAnC1J,KAAK+D,QAAQc,WAAW+Q,QAC7B5V,KAAK+D,QAAQc,WAAWgR,2BACrBzS,KAAK0U,cAAc,MAAMpL,UAAY1M,KAAK+D,QAAQc,WAAWgR,yBAC7D1Q,MAAM6S,oBAAoBtO,SAG5B3F,QAAQc,WAAW+Q,OAAO5V,KAAK+D,QAAQa,YAAagT,IAEzDA,EAAc5X,KAAK+D,QAAQc,WAAW+Q,+CAI5B3Q,OACPA,EAAI,MAAO,OACV2B,EAAQ3B,EAAGnB,aAAa,qBACtB8C,EAA4C,CAAC3B,EAAI2B,GAAzC5G,KAAKkY,cAAcjT,EAAGtB,0DAGlB/B,EAASwW,GACzBxW,IAAYP,SAASgX,oBAClBC,gBAAgB1W,QAGlBmC,QAAQc,WAAa7E,KAAK6E,WAAWuT,GAAmB,QACxDrU,QAAQC,iBAAkB,OAC1BD,QAAQnC,QAAUA,EAEnBA,EAAQkI,kBACV9J,KAAKuY,mBAAmBvY,KAAK+D,QAAQc,WAAWJ,SAC7CzE,KAAKwY,cAAc5W,EAAS5B,KAAK+D,QAAQc,WAAWJ,cAEpDM,YAAYnD,2CAIHqD,MACdA,EAAGsG,aAE6B,IAAvB3K,OAAOwM,mBACiB,IAAxB/L,SAAS2J,YAChB,KACI7F,EAAQ9D,SAAS2J,cACrB7F,EAAMsT,mBAAmBxT,GACzBE,EAAMgG,UAAS,OACXL,EAAMlK,OAAOwM,eACjBtC,EAAIM,kBACJN,EAAIQ,SAASnG,QACR,QAA4C,IAAjC9D,SAASwQ,KAAK6G,gBAAgC,KAC1DC,EAAYtX,SAASwQ,KAAK6G,kBAC9BC,EAAUC,kBAAkB3T,GAC5B0T,EAAUxN,UAAS,GACnBwN,EAAUE,qDAKKrN,OACbV,EAAK3F,GAETA,GADA2F,EAAMlK,OAAOwM,gBACDO,WAAW,IACjBnB,qBACFsM,EAAWzX,SAAS0X,eAAevN,GACvCrG,EAAM8H,WAAW6L,GACjB3T,EAAMsT,mBAAmBK,GACzB3T,EAAMgG,UAAS,GACfL,EAAIM,kBACJN,EAAIQ,SAASnG,yCAID6T,EAAUxN,OAClByN,EAAYD,EAASvS,UACrByS,EAAWF,EAAS7M,eAEpBgN,EAAQH,EAASlZ,MAAMoM,UAAU,EAAGgN,GACpCE,EAAOJ,EAASlZ,MAAMoM,UACxB8M,EAAS5M,aACT4M,EAASlZ,MAAMM,QAEjB4Y,EAASlZ,MAAQqZ,EAAQ3N,EAAO4N,EAChCF,GAAsB1N,EAAKpL,OAC3B4Y,EAAS7M,eAAiB+M,EAC1BF,EAAS5M,aAAe8M,EACxBF,EAASzN,QACTyN,EAASvS,UAAYwS,qCAIjBjZ,KAAKoD,YACFA,KAAK0E,MAAM+B,QAAU,sBACrBrH,UAAW,OACXwD,aAAe,OACfjC,QAAU,8CAID6C,EAAO8E,MAEF,iBADrB9E,EAAQG,SAASH,MACgBpC,MAAMoC,QACnCf,EAAO7F,KAAK+D,QAAQgC,cAAca,GAClCyS,EAAUrZ,KAAK+D,QAAQc,WAAWmR,eAAenQ,GACrC,OAAZwT,GAAkBrZ,KAAKsZ,YAAYD,EAAS3N,EAAe7F,wCAGrDwT,EAAS3N,EAAe7F,QAC7BV,MAAMoU,mBAAmBF,GAAS,GAAM,EAAM3N,EAAe7F,mCAG5DhB,EAAY2U,EAAWpH,MACI,mBAAtBvN,EAAW+Q,aACd,IAAIhS,MAAM,oDAIhBiB,EAAW+Q,OAHDxD,EAGUoH,EAFA3U,EAAW+Q,OAAO6D,OAAOD,kCAM1CpB,EAAiBoB,EAAWpH,OAC7BxL,EAAQG,SAASqR,MACA,iBAAVxR,EACT,MAAM,IAAIhD,MAAM,6DAEdiB,EAAa7E,KAAK6E,WAAW+B,QAE5B8S,QAAQ7U,EAAY2U,EAAWpH,yCAGxBoH,EAAWpH,OACnBpS,KAAKwC,eAGD,IAAIoB,MACR,sEAHG8V,QAAQ1Z,KAAK+D,QAAQc,WAAY2U,EAAWpH,kCAQ9CnN,OACAA,QACG,IAAIrB,MAAM,qDAII,oBAAXgT,QAA0B3R,aAAc2R,SACjD3R,EAAKA,EAAG4R,OAKR5R,EAAG6R,cAAgBC,UACnB9R,EAAG6R,cAAgBE,gBACnB/R,EAAG6R,cAAgBrX,cAEfW,EAAS6E,EAAG7E,OACP4G,EAAI,EAAGA,EAAI5G,IAAU4G,OACvB2S,QAAQ1U,EAAG+B,cAGb2S,QAAQ1U,mCAITA,mBACDtD,OAAOiY,OAAO3U,GACfA,EAAG0S,kBACAtP,WAAWuR,OAAO3U,EAAG0S,aAG5B1T,YAAW,WACTgB,EAAG4U,gBAAgB,gBACnBC,EAAKtX,UAAW,EACZyC,EAAG0S,aACL1S,EAAG0S,YAAYjQ,oDAvXZ1H,KAAK+Z,wBAGDC,MACPha,KAAK+Z,WAAaC,SACfD,UAAYC,EACbha,KAAK+D,QAAQnC,SAAS,KACpBmW,EAAe,IAAIlX,qCAA8BmZ,SAChDjW,QAAQnC,QAAQyK,cAAc0L,oDAKZlS,eACP,IAATA,YACC7F,KAAK+D,QAAQc,WAAWJ,gBAAUzE,KAAK+D,QAAQa,aACvD5E,KAAKmF,MAAM2E,kBAAkB9J,KAAK+D,QAAQnC,SAE1C,kCACC5B,KAAK+D,QAAQc,WAAWJ,QACvBoB,EAAKyP,SAAStV,KAAK+D,QAAQc,WAAWsR,WACxC,UAKFnW,KAAK+D,QAAQc,WAAWJ,QACxBoB,EAAKyP,SAAStV,KAAK+D,QAAQc,WAAWsR,0DAIX8D,UACtBA,EAAUtG,kDAIV,CAAC,WAAY"}