{"version":3,"file":"tribute.min.js","sources":["../src/utils.js","../src/TributeEvents.js","../src/TributeMenuEvents.js","../src/TributeRange.js","../src/TributeSearch.js","../src/Tribute.js"],"sourcesContent":["if (!Array.prototype.find) {\n    Array.prototype.find = function(predicate) {\n        if (this === null) {\n            throw new TypeError('Array.prototype.find called on null or undefined')\n        }\n        if (typeof predicate !== 'function') {\n            throw new TypeError('predicate must be a function')\n        }\n        var list = Object(this)\n        var length = list.length >>> 0\n        var thisArg = arguments[1]\n        var value\n\n        for (var i = 0; i < length; i++) {\n            value = list[i]\n            if (predicate.call(thisArg, value, i, list)) {\n                return value\n            }\n        }\n        return undefined\n    }\n}\n\nif (window && typeof window.CustomEvent !== \"function\") {\n  function CustomEvent(event, params) {\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: undefined\n    }\n    var evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n if (typeof window.Event !== 'undefined') {\n   CustomEvent.prototype = window.Event.prototype\n }\n\n  window.CustomEvent = CustomEvent\n}","class TributeEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.events = this;\n  }\n\n  static keys() {\n    return [\n      {\n        key: 9,\n        value: \"TAB\"\n      },\n      {\n        key: 8,\n        value: \"DELETE\"\n      },\n      {\n        key: 13,\n        value: \"ENTER\"\n      },\n      {\n        key: 27,\n        value: \"ESCAPE\"\n      },\n      {\n        key: 32,\n        value: \"SPACE\"\n      },\n      {\n        key: 38,\n        value: \"UP\"\n      },\n      {\n        key: 40,\n        value: \"DOWN\"\n      }\n    ];\n  }\n\n  bind(element) {\n    element.boundKeydown = this.keydown.bind(element, this);\n    element.boundKeyup = this.keyup.bind(element, this);\n    element.boundInput = this.input.bind(element, this);\n\n    element.addEventListener(\"keydown\", element.boundKeydown, false);\n    element.addEventListener(\"keyup\", element.boundKeyup, false);\n    element.addEventListener(\"input\", element.boundInput, false);\n  }\n\n  unbind(element) {\n    element.removeEventListener(\"keydown\", element.boundKeydown, false);\n    element.removeEventListener(\"keyup\", element.boundKeyup, false);\n    element.removeEventListener(\"input\", element.boundInput, false);\n\n    delete element.boundKeydown;\n    delete element.boundKeyup;\n    delete element.boundInput;\n  }\n\n  keydown(instance, event) {\n    if (instance.shouldDeactivate(event)) {\n      instance.tribute.isActive = false;\n      instance.tribute.hideMenu();\n    }\n\n    let element = this;\n    instance.commandEvent = false;\n\n    TributeEvents.keys().forEach(o => {\n      if (o.key === event.keyCode) {\n        instance.commandEvent = true;\n        instance.callbacks()[o.value.toLowerCase()](event, element);\n      }\n    });\n  }\n\n  input(instance, event) {\n    instance.inputEvent = true;\n    instance.keyup.call(this, instance, event);\n  }\n\n  click(instance, event) {\n    let tribute = instance.tribute;\n    if (tribute.menu && tribute.menu.contains(event.target)) {\n      let li = event.target;\n      event.preventDefault();\n      event.stopPropagation();\n      while (li.nodeName.toLowerCase() !== \"li\") {\n        li = li.parentNode;\n        if (!li || li === tribute.menu) {\n          return;\n        }\n      }\n\n      if (li.getAttribute(\"data-disabled\") === \"true\") return;\n\n      tribute.selectItemAtIndex(li.getAttribute(\"data-index\"), event);\n      tribute.hideMenu();\n\n      // TODO: should fire with externalTrigger and target is outside of menu\n    } else if (tribute.current.externalTrigger) {\n      tribute.current.externalTrigger = false;\n    } else if (tribute.current.element && !tribute.current.externalTrigger) {\n      setTimeout(() => tribute.hideMenu());\n    }\n  }\n\n  keyup(instance, event) {\n    if (instance.inputEvent) {\n      instance.inputEvent = false;\n    }\n    instance.updateSelection(this);\n\n    if (event.keyCode === 27) return;\n\n    if (!instance.tribute.allowSpaces && instance.tribute.hasTrailingSpace) {\n      instance.tribute.hasTrailingSpace = false;\n      instance.commandEvent = true;\n      instance.callbacks()[\"space\"](event, this);\n      return;\n    }\n\n    if (!instance.tribute.isActive) {\n      if (instance.tribute.autocompleteMode) {\n        instance.callbacks().triggerChar(event, this, \"\");\n      } else {\n        let keyCode = instance.getKeyCode(instance, this, event);\n\n        if (isNaN(keyCode) || !keyCode) return;\n\n        let trigger = instance.tribute.triggers().find(trigger => {\n          return trigger.charCodeAt(0) === keyCode;\n        });\n\n        if (typeof trigger !== \"undefined\") {\n          instance.callbacks().triggerChar(event, this, trigger);\n        }\n      }\n    }\n\n    if (\n      instance.tribute.current.mentionText.length <\n      instance.tribute.current.collection.menuShowMinLength\n    ) {\n      return;\n    }\n\n    if (\n      ((instance.tribute.current.trigger ||\n        instance.tribute.autocompleteMode) &&\n        instance.commandEvent === false) ||\n      (instance.tribute.isActive && event.keyCode === 8)\n    ) {\n      instance.tribute.showMenuFor(this, true);\n    }\n  }\n\n  shouldDeactivate(event) {\n    if (!this.tribute.isActive) return false;\n\n    if (this.tribute.current.mentionText.length === 0) {\n      let eventKeyPressed = false;\n      TributeEvents.keys().forEach(o => {\n        if (event.keyCode === o.key) eventKeyPressed = true;\n      });\n\n      return !eventKeyPressed;\n    }\n\n    return false;\n  }\n\n  getKeyCode(instance, el, event) {\n    let char;\n    let tribute = instance.tribute;\n    let info = tribute.range.getTriggerInfo(\n      false,\n      tribute.hasTrailingSpace,\n      true,\n      tribute.allowSpaces,\n      tribute.autocompleteMode\n    );\n\n    if (info) {\n      return info.mentionTriggerChar.charCodeAt(0);\n    } else {\n      return false;\n    }\n  }\n\n  updateSelection(el) {\n    this.tribute.current.element = el;\n    let info = this.tribute.range.getTriggerInfo(\n      false,\n      this.tribute.hasTrailingSpace,\n      true,\n      this.tribute.allowSpaces,\n      this.tribute.autocompleteMode\n    );\n\n    if (info) {\n      this.tribute.current.selectedPath = info.mentionSelectedPath;\n      this.tribute.current.mentionText = info.mentionText;\n      this.tribute.current.selectedOffset = info.mentionSelectedOffset;\n    }\n  }\n\n  callbacks() {\n    return {\n      triggerChar: (e, el, trigger) => {\n        let tribute = this.tribute;\n        tribute.current.trigger = trigger;\n\n        let collectionItem = tribute.collection.find(item => {\n          return item.trigger === trigger;\n        });\n\n        tribute.current.collection = collectionItem;\n\n        if (\n          tribute.current.mentionText.length >=\n            tribute.current.collection.menuShowMinLength &&\n          tribute.inputEvent\n        ) {\n          tribute.showMenuFor(el, true);\n        }\n      },\n      enter: (e, el) => {\n        // choose selection\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          setTimeout(() => {\n            this.tribute.selectItemAtIndex(this.tribute.menuSelected, e);\n            this.tribute.hideMenu();\n          }, 0);\n        }\n      },\n      escape: (e, el) => {\n        if (this.tribute.isActive) {\n          e.preventDefault();\n          e.stopPropagation();\n          this.tribute.isActive = false;\n          this.tribute.hideMenu();\n        }\n      },\n      tab: (e, el) => {\n        // choose first match\n        this.callbacks().enter(e, el);\n      },\n      space: (e, el) => {\n        if (this.tribute.isActive) {\n          if (this.tribute.spaceSelectsMatch) {\n            this.callbacks().enter(e, el);\n          } else if (!this.tribute.allowSpaces) {\n            e.stopPropagation();\n            setTimeout(() => {\n              this.tribute.hideMenu();\n              this.tribute.isActive = false;\n            }, 0);\n          }\n        }\n      },\n      up: (e, el) => {\n        // navigate up ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length;\n          let lis = this.tribute.menu.querySelectorAll(\"li\");\n\n          //If menuSelected is -1 then there are no valid, non-disabled items\n          //to navigate through\n          if (this.tribute.menuSelected === -1) {\n            return;\n          }\n\n          do {\n            this.tribute.menuSelected--;\n            if (this.tribute.menuSelected === -1) {\n              this.tribute.menuSelected = count -1;\n              this.tribute.menu.scrollTop = this.tribute.menu.scrollHeight;\n            }\n          } while (lis[this.tribute.menuSelected].getAttribute(\"data-disabled\") === \"true\")\n          this.setActiveLi();\n        }\n      },\n      down: (e, el) => {\n        // navigate down ul\n        if (this.tribute.isActive && this.tribute.current.filteredItems) {\n          e.preventDefault();\n          e.stopPropagation();\n          let count = this.tribute.current.filteredItems.length;\n          let lis = this.tribute.menu.querySelectorAll(\"li\");\n\n          //If menuSelected is -1 then there are no valid, non-disabled items\n          //to navigate through\n          if (this.tribute.menuSelected === -1) {\n            return;\n          }\n\n          do {\n            this.tribute.menuSelected++;\n            if (this.tribute.menuSelected >= count) {\n              this.tribute.menuSelected = 0;\n              this.tribute.menu.scrollTop = 0;\n            }\n          } while (lis[this.tribute.menuSelected].getAttribute(\"data-disabled\") === \"true\")\n          this.setActiveLi();\n        }\n      },\n      delete: (e, el) => {\n        if (\n          this.tribute.isActive &&\n          this.tribute.current.mentionText.length < 1\n        ) {\n          this.tribute.hideMenu();\n        } else if (this.tribute.isActive) {\n          this.tribute.showMenuFor(el);\n        }\n      }\n    };\n  }\n\n  setActiveLi(index) {\n\n    let lis = this.tribute.menu.querySelectorAll(\"li\"),\n      length = lis.length >>> 0;\n\n    if (index) this.tribute.menuSelected = parseInt(index);\n\n    for (let i = 0; i < length; i++) {\n      let li = lis[i];\n      if (i === this.tribute.menuSelected) {\n        if (li.getAttribute(\"data-disabled\") !== \"true\") {\n          li.classList.add(this.tribute.current.collection.selectClass);\n        }\n\n        let liClientRect = li.getBoundingClientRect();\n        let menuClientRect = this.tribute.menu.getBoundingClientRect();\n\n        if (liClientRect.bottom > menuClientRect.bottom) {\n          let scrollDistance = liClientRect.bottom - menuClientRect.bottom;\n          this.tribute.menu.scrollTop += scrollDistance;\n        } else if (liClientRect.top < menuClientRect.top) {\n          let scrollDistance = menuClientRect.top - liClientRect.top;\n          this.tribute.menu.scrollTop -= scrollDistance;\n        }\n      } else {\n        li.classList.remove(this.tribute.current.collection.selectClass);\n      }\n    }\n  }\n\n  getFullHeight(elem, includeMargin) {\n    let height = elem.getBoundingClientRect().height;\n\n    if (includeMargin) {\n      let style = elem.currentStyle || window.getComputedStyle(elem);\n      return (\n        height + parseFloat(style.marginTop) + parseFloat(style.marginBottom)\n      );\n    }\n\n    return height;\n  }\n}\n\nexport default TributeEvents;\n","class TributeMenuEvents {\n  constructor(tribute) {\n    this.tribute = tribute;\n    this.tribute.menuEvents = this;\n    this.menu = this.tribute.menu;\n  }\n\n  bind(menu) {\n    this.menuClickEvent = this.tribute.events.click.bind(null, this);\n    this.menuContainerScrollEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.hideMenu();\n        }\n      },\n      10,\n      false\n    );\n    this.windowResizeEvent = this.debounce(\n      () => {\n        if (this.tribute.isActive) {\n          this.tribute.hideMenu();\n        }\n      },\n      10,\n      false\n    );\n\n    // fixes IE11 issues with mousedown\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .addEventListener(\"mousedown\", this.menuClickEvent, false);\n    window.addEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.addEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.addEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  unbind(menu) {\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"mousedown\", this.menuClickEvent, false);\n    this.tribute.range\n      .getDocument()\n      .removeEventListener(\"MSPointerDown\", this.menuClickEvent, false);\n    window.removeEventListener(\"resize\", this.windowResizeEvent);\n\n    if (this.menuContainer) {\n      this.menuContainer.removeEventListener(\n        \"scroll\",\n        this.menuContainerScrollEvent,\n        false\n      );\n    } else {\n      window.removeEventListener(\"scroll\", this.menuContainerScrollEvent);\n    }\n  }\n\n  debounce(func, wait, immediate) {\n    var timeout;\n    return () => {\n      var context = this,\n        args = arguments;\n      var later = () => {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      var callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n}\n\nexport default TributeMenuEvents;\n","// Thanks to https://github.com/jeff-collins/ment.io\nimport \"./utils\";\n\nclass TributeRange {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.range = this\n    }\n\n    getDocument() {\n        let iframe\n        if (this.tribute.current.collection) {\n            iframe = this.tribute.current.collection.iframe\n        }\n\n        if (!iframe) {\n            return document\n        }\n\n        return iframe.contentWindow.document\n    }\n\n    positionMenuAtCaret(scrollTo) {\n        let context = this.tribute.current,\n            coordinates\n\n        let info = this.getTriggerInfo(false, this.tribute.hasTrailingSpace, true, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (typeof info !== 'undefined') {\n\n            if(!this.tribute.positionMenu){\n                this.tribute.menu.style.cssText = `display: block;`\n                return\n            }\n\n            if (!this.isContentEditable(context.element)) {\n                coordinates = this.getTextAreaOrInputUnderlinePosition(this.tribute.current.element,\n                    info.mentionPosition)\n            }\n            else {\n                coordinates = this.getContentEditableCaretPosition(info.mentionPosition)\n            }\n\n            this.tribute.menu.style.cssText = `top: ${coordinates.top}px;\n                                     left: ${coordinates.left}px;\n                                     right: ${coordinates.right}px;\n                                     bottom: ${coordinates.bottom}px;\n                                     max-height: ${coordinates.maxHeight || 500}px;\n                                     max-width: ${coordinates.maxWidth || 300}px;\n                                     position: ${coordinates.position || 'absolute'};\n                                     display: block;`\n\n            if (coordinates.left === 'auto') {\n                this.tribute.menu.style.left = 'auto'\n            }\n\n            if (coordinates.top === 'auto') {\n                this.tribute.menu.style.top = 'auto'\n            }\n\n            if (scrollTo) this.scrollIntoView()\n\n        } else {\n            this.tribute.menu.style.cssText = 'display: none'\n        }\n    }\n\n    get menuContainerIsBody() {\n        return this.tribute.menuContainer === document.body || !this.tribute.menuContainer;\n    }\n\n\n    selectElement(targetElement, path, offset) {\n        let range\n        let elem = targetElement\n\n        if (path) {\n            for (var i = 0; i < path.length; i++) {\n                elem = elem.childNodes[path[i]]\n                if (elem === undefined) {\n                    return\n                }\n                while (elem.length < offset) {\n                    offset -= elem.length\n                    elem = elem.nextSibling\n                }\n                if (elem.childNodes.length === 0 && !elem.length) {\n                    elem = elem.previousSibling\n                }\n            }\n        }\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(elem, offset)\n        range.setEnd(elem, offset)\n        range.collapse(true)\n\n        try {\n            sel.removeAllRanges()\n        } catch (error) {}\n\n        sel.addRange(range)\n        targetElement.focus()\n    }\n\n    replaceTriggerText(text, requireLeadingSpace, hasTrailingSpace, originalEvent, item) {\n        let info = this.getTriggerInfo(true, hasTrailingSpace, requireLeadingSpace, this.tribute.allowSpaces, this.tribute.autocompleteMode)\n\n        if (info !== undefined) {\n            let context = this.tribute.current\n            let replaceEvent = new CustomEvent('tribute-replaced', {\n                detail: {\n                    item: item,\n                    instance: context,\n                    context: info,\n                    event: originalEvent,\n                }\n            })\n\n            if (!this.isContentEditable(context.element)) {\n                let myField = this.tribute.current.element\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : ' '\n                text += textSuffix\n                let startPos = info.mentionPosition\n                let endPos = info.mentionPosition + info.mentionText.length + textSuffix.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length - 1\n                }\n                myField.value = myField.value.substring(0, startPos) + text +\n                    myField.value.substring(endPos, myField.value.length)\n                myField.selectionStart = startPos + text.length\n                myField.selectionEnd = startPos + text.length\n            } else {\n                // add a space to the end of the pasted text\n                let textSuffix = typeof this.tribute.replaceTextSuffix == 'string'\n                    ? this.tribute.replaceTextSuffix\n                    : '\\xA0'\n                text += textSuffix\n                let endPos = info.mentionPosition + info.mentionText.length\n                if (!this.tribute.autocompleteMode) {\n                    endPos += info.mentionTriggerChar.length\n                }\n                this.pasteHtml(text, info.mentionPosition, endPos)\n            }\n\n            context.element.dispatchEvent(new CustomEvent('input', { bubbles: true }))\n            context.element.dispatchEvent(replaceEvent)\n        }\n    }\n\n    pasteHtml(html, startPos, endPos) {\n        let range, sel\n        sel = this.getWindowSelection()\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, startPos)\n        range.setEnd(sel.anchorNode, endPos)\n        range.deleteContents()\n\n        let el = this.getDocument().createElement('div')\n        el.innerHTML = html\n        let frag = this.getDocument().createDocumentFragment(),\n            node, lastNode\n        while ((node = el.firstChild)) {\n            lastNode = frag.appendChild(node)\n        }\n        range.insertNode(frag)\n\n        // Preserve the selection\n        if (lastNode) {\n            range = range.cloneRange()\n            range.setStartAfter(lastNode)\n            range.collapse(true)\n            sel.removeAllRanges()\n            sel.addRange(range)\n        }\n    }\n\n    getWindowSelection() {\n        if (this.tribute.collection.iframe) {\n            return this.tribute.collection.iframe.contentWindow.getSelection()\n        }\n\n        return window.getSelection()\n    }\n\n    getNodePositionInParent(element) {\n        if (element.parentNode === null) {\n            return 0\n        }\n\n        for (var i = 0; i < element.parentNode.childNodes.length; i++) {\n            let node = element.parentNode.childNodes[i]\n\n            if (node === element) {\n                return i\n            }\n        }\n    }\n\n    getContentEditableSelectedPath(ctx) {\n        let sel = this.getWindowSelection()\n        let selected = sel.anchorNode\n        let path = []\n        let offset\n\n        if (selected != null) {\n            let i\n            let ce = selected.contentEditable\n            while (selected !== null && ce !== 'true') {\n                i = this.getNodePositionInParent(selected)\n                path.push(i)\n                selected = selected.parentNode\n                if (selected !== null) {\n                    ce = selected.contentEditable\n                }\n            }\n            path.reverse()\n\n            // getRangeAt may not exist, need alternative\n            offset = sel.getRangeAt(0).startOffset\n\n            return {\n                selected: selected,\n                path: path,\n                offset: offset\n            }\n        }\n    }\n\n    getTextPrecedingCurrentSelection() {\n        let context = this.tribute.current,\n            text = ''\n\n        if (!this.isContentEditable(context.element)) {\n            let textComponent = this.tribute.current.element;\n            if (textComponent) {\n                let startPos = textComponent.selectionStart\n                if (textComponent.value && startPos >= 0) {\n                    text = textComponent.value.substring(0, startPos)\n                }\n            }\n\n        } else {\n            let selectedElem = this.getWindowSelection().anchorNode\n\n            if (selectedElem != null) {\n                let workingNodeContent = selectedElem.textContent\n                let selectStartOffset = this.getWindowSelection().getRangeAt(0).startOffset\n\n                if (workingNodeContent && selectStartOffset >= 0) {\n                    text = workingNodeContent.substring(0, selectStartOffset)\n                }\n            }\n        }\n\n        return text\n    }\n\n    getLastWordInText(text) {\n        text = text.replace(/\\u00A0/g, ' '); // https://stackoverflow.com/questions/29850407/how-do-i-replace-unicode-character-u00a0-with-a-space-in-javascript\n        var wordsArray;\n        if (this.tribute.autocompleteSeparator) {\n            wordsArray = text.split(this.tribute.autocompleteSeparator);\n        } else {\n            wordsArray = text.split(/\\s+/);\n        }\n        var worldsCount = wordsArray.length - 1;\n        return wordsArray[worldsCount].trim();\n    }\n\n    getTriggerInfo(menuAlreadyActive, hasTrailingSpace, requireLeadingSpace, allowSpaces, isAutocomplete) {\n        let ctx = this.tribute.current\n        let selected, path, offset\n\n        if (!this.isContentEditable(ctx.element)) {\n            selected = this.tribute.current.element\n        } else {\n            let selectionInfo = this.getContentEditableSelectedPath(ctx)\n\n            if (selectionInfo) {\n                selected = selectionInfo.selected\n                path = selectionInfo.path\n                offset = selectionInfo.offset\n            }\n        }\n\n        let effectiveRange = this.getTextPrecedingCurrentSelection()\n        let lastWordOfEffectiveRange = this.getLastWordInText(effectiveRange)\n\n        if (isAutocomplete) {\n            return {\n                mentionPosition: effectiveRange.length - lastWordOfEffectiveRange.length,\n                mentionText: lastWordOfEffectiveRange,\n                mentionSelectedElement: selected,\n                mentionSelectedPath: path,\n                mentionSelectedOffset: offset\n            }\n        }\n\n        if (effectiveRange !== undefined && effectiveRange !== null) {\n            let mostRecentTriggerCharPos = -1\n            let triggerChar\n\n            this.tribute.collection.forEach(config => {\n                let c = config.trigger\n                let idx = config.requireLeadingSpace ?\n                    this.lastIndexWithLeadingSpace(effectiveRange, c) :\n                    effectiveRange.lastIndexOf(c)\n\n                if (idx > mostRecentTriggerCharPos) {\n                    mostRecentTriggerCharPos = idx\n                    triggerChar = c\n                    requireLeadingSpace = config.requireLeadingSpace\n                }\n            })\n\n            if (mostRecentTriggerCharPos >= 0 &&\n                (\n                    mostRecentTriggerCharPos === 0 ||\n                    !requireLeadingSpace ||\n                    /[\\xA0\\s]/g.test(\n                        effectiveRange.substring(\n                            mostRecentTriggerCharPos - 1,\n                            mostRecentTriggerCharPos)\n                    )\n                )\n            ) {\n                let currentTriggerSnippet = effectiveRange.substring(mostRecentTriggerCharPos + triggerChar.length,\n                    effectiveRange.length)\n\n                triggerChar = effectiveRange.substring(mostRecentTriggerCharPos, mostRecentTriggerCharPos + triggerChar.length)\n                let firstSnippetChar = currentTriggerSnippet.substring(0, 1)\n                let leadingSpace = currentTriggerSnippet.length > 0 &&\n                    (\n                        firstSnippetChar === ' ' ||\n                        firstSnippetChar === '\\xA0'\n                    )\n                if (hasTrailingSpace) {\n                    currentTriggerSnippet = currentTriggerSnippet.trim()\n                }\n\n                let regex = allowSpaces ? /[^\\S ]/g : /[\\xA0\\s]/g;\n\n                this.tribute.hasTrailingSpace = regex.test(currentTriggerSnippet);\n\n                if (!leadingSpace && (menuAlreadyActive || !(regex.test(currentTriggerSnippet)))) {\n                    return {\n                        mentionPosition: mostRecentTriggerCharPos,\n                        mentionText: currentTriggerSnippet,\n                        mentionSelectedElement: selected,\n                        mentionSelectedPath: path,\n                        mentionSelectedOffset: offset,\n                        mentionTriggerChar: triggerChar\n                    }\n                }\n            }\n        }\n    }\n\n    lastIndexWithLeadingSpace (str, trigger) {\n        let reversedStr = str.split('').reverse().join('')\n        let index = -1\n\n        for (let cidx = 0, len = str.length; cidx < len; cidx++) {\n            let firstChar = cidx === str.length - 1\n            let leadingSpace = /\\s/.test(reversedStr[cidx + 1])\n\n            let match = true\n            for (let triggerIdx = trigger.length - 1; triggerIdx >= 0; triggerIdx--) {\n              if (trigger[triggerIdx] !== reversedStr[cidx-triggerIdx]) {\n                match = false\n                break\n              }\n            }\n\n            if (match && (firstChar || leadingSpace)) {\n                index = str.length - 1 - cidx\n                break\n            }\n        }\n\n        return index\n    }\n\n    isContentEditable(element) {\n        return element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA'\n    }\n\n    isMenuOffScreen(coordinates, menuDimensions) {\n        let windowWidth = window.innerWidth\n        let windowHeight = window.innerHeight\n        let doc = document.documentElement\n        let windowLeft = (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0)\n        let windowTop = (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0)\n\n        let menuTop = typeof coordinates.top === 'number' ? coordinates.top : windowTop + windowHeight - coordinates.bottom - menuDimensions.height\n        let menuRight = typeof coordinates.right === 'number' ? coordinates.right : coordinates.left + menuDimensions.width\n        let menuBottom = typeof coordinates.bottom === 'number' ? coordinates.bottom : coordinates.top + menuDimensions.height\n        let menuLeft = typeof coordinates.left === 'number' ? coordinates.left : windowLeft + windowWidth - coordinates.right - menuDimensions.width\n\n        return {\n            top: menuTop < Math.floor(windowTop),\n            right: menuRight > Math.ceil(windowLeft + windowWidth),\n            bottom: menuBottom > Math.ceil(windowTop + windowHeight),\n            left: menuLeft < Math.floor(windowLeft)\n        }\n    }\n\n    getMenuDimensions() {\n        // Width of the menu depends of its contents and position\n        // We must check what its width would be without any obstruction\n        // This way, we can achieve good positioning for flipping the menu\n        let dimensions = {\n            width: null,\n            height: null\n        }\n\n        this.tribute.menu.style.cssText = `top: 0px;\n                                 left: 0px;\n                                 position: fixed;\n                                 display: block;\n                                 visibility; hidden;\n                                 max-height:500px;`\n       dimensions.width = this.tribute.menu.offsetWidth\n       dimensions.height = this.tribute.menu.offsetHeight\n\n       this.tribute.menu.style.cssText = `display: none;`\n\n       return dimensions\n    }\n\n    getTextAreaOrInputUnderlinePosition(element, position, flipped) {\n        let properties = ['direction', 'boxSizing', 'width', 'height', 'overflowX',\n            'overflowY', 'borderTopWidth', 'borderRightWidth',\n            'borderBottomWidth', 'borderLeftWidth', 'borderStyle', 'paddingTop',\n            'paddingRight', 'paddingBottom', 'paddingLeft',\n            'fontStyle', 'fontVariant', 'fontWeight', 'fontStretch',\n            'fontSize', 'fontSizeAdjust', 'lineHeight', 'fontFamily',\n            'textAlign', 'textTransform', 'textIndent',\n            'textDecoration', 'letterSpacing', 'wordSpacing'\n        ]\n\n        let isFirefox = (window.mozInnerScreenX !== null)\n\n        let div = this.getDocument().createElement('div')\n        div.id = 'input-textarea-caret-position-mirror-div'\n        this.getDocument().body.appendChild(div)\n\n        let style = div.style\n        let computed = window.getComputedStyle ? getComputedStyle(element) : element.currentStyle\n\n        style.whiteSpace = 'pre-wrap'\n        if (element.nodeName !== 'INPUT') {\n            style.wordWrap = 'break-word'\n        }\n\n        style.position = 'absolute'\n        style.visibility = 'hidden'\n\n        // transfer the element's properties to the div\n        properties.forEach(prop => {\n            style[prop] = computed[prop]\n        })\n\n        //NOT SURE WHY THIS IS HERE AND IT DOESNT SEEM HELPFUL\n        // if (isFirefox) {\n        //     style.width = `${(parseInt(computed.width) - 2)}px`\n        //     if (element.scrollHeight > parseInt(computed.height))\n        //         style.overflowY = 'scroll'\n        // } else {\n        //     style.overflow = 'hidden'\n        // }\n\n        let span0 = document.createElement('span')\n        span0.textContent =  element.value.substring(0, position)\n        div.appendChild(span0)\n\n        if (element.nodeName === 'INPUT') {\n            div.textContent = div.textContent.replace(/\\s/g, ' ')\n        }\n\n        //Create a span in the div that represents where the cursor\n        //should be\n        let span = this.getDocument().createElement('span')\n        //we give it no content as this represents the cursor\n        span.textContent = '&#x200B;'\n        div.appendChild(span)\n\n        let span2 = this.getDocument().createElement('span');\n        span2.textContent = element.value.substring(position);\n        div.appendChild(span2);\n\n        let rect = element.getBoundingClientRect()\n\n        //position the div exactly over the element\n        //so we can get the bounding client rect for the span and\n        //it should represent exactly where the cursor is\n        div.style.position = 'fixed';\n        div.style.left = rect.left + 'px';\n        div.style.top = rect.top + 'px';\n        div.style.width = rect.width + 'px';\n        div.style.height = rect.height + 'px';\n        div.scrollTop = element.scrollTop;\n\n        var spanRect = span.getBoundingClientRect();\n        this.getDocument().body.removeChild(div)\n        return this.getFixedCoordinatesRelativeToRect(spanRect);\n    }\n\n    getContentEditableCaretPosition(selectedNodePosition) {\n        let range\n        let sel = this.getWindowSelection()\n\n        range = this.getDocument().createRange()\n        range.setStart(sel.anchorNode, selectedNodePosition)\n        range.setEnd(sel.anchorNode, selectedNodePosition)\n\n        range.collapse(false)\n\n        let rect = range.getBoundingClientRect()\n\n        return this.getFixedCoordinatesRelativeToRect(rect);\n    }\n\n    getFixedCoordinatesRelativeToRect(rect) {\n        let coordinates = {\n            position: 'fixed',\n            left: rect.left,\n            top: rect.top + rect.height\n        }\n\n        let menuDimensions = this.getMenuDimensions()\n\n        var availableSpaceOnTop = rect.top;\n        var availableSpaceOnBottom = window.innerHeight - (rect.top + rect.height);\n\n        //check to see where's the right place to put the menu vertically\n        if (availableSpaceOnBottom < menuDimensions.height) {\n          if (availableSpaceOnTop >= menuDimensions.height || availableSpaceOnTop > availableSpaceOnBottom) {\n            coordinates.top = 'auto';\n            coordinates.bottom = window.innerHeight - rect.top;\n            if (availableSpaceOnBottom < menuDimensions.height) {\n              coordinates.maxHeight = availableSpaceOnTop;\n            }\n          } else {\n            if (availableSpaceOnTop < menuDimensions.height) {\n              coordinates.maxHeight = availableSpaceOnBottom;\n            }\n          }\n        }\n\n        var availableSpaceOnLeft = rect.left;\n        var availableSpaceOnRight = window.innerWidth - rect.left;\n\n        //check to see where's the right place to put the menu horizontally\n        if (availableSpaceOnRight < menuDimensions.width) {\n          if (availableSpaceOnLeft >= menuDimensions.width || availableSpaceOnLeft > availableSpaceOnRight) {\n            coordinates.left = 'auto';\n            coordinates.right = window.innerWidth - rect.left;\n            if (availableSpaceOnRight < menuDimensions.width) {\n              coordinates.maxWidth = availableSpaceOnLeft;\n            }\n          } else {\n            if (availableSpaceOnLeft < menuDimensions.width) {\n              coordinates.maxWidth = availableSpaceOnRight;\n            }\n          }\n        }\n\n        return coordinates\n    }\n\n    scrollIntoView(elem) {\n        let reasonableBuffer = 20,\n            clientRect\n        let maxScrollDisplacement = 100\n        let e = this.menu\n\n        if (typeof e === 'undefined') return;\n\n        while (clientRect === undefined || clientRect.height === 0) {\n            clientRect = e.getBoundingClientRect()\n\n            if (clientRect.height === 0) {\n                e = e.childNodes[0]\n                if (e === undefined || !e.getBoundingClientRect) {\n                    return\n                }\n            }\n        }\n\n        let elemTop = clientRect.top\n        let elemBottom = elemTop + clientRect.height\n\n        if (elemTop < 0) {\n            window.scrollTo(0, window.pageYOffset + clientRect.top - reasonableBuffer)\n        } else if (elemBottom > window.innerHeight) {\n            let maxY = window.pageYOffset + clientRect.top - reasonableBuffer\n\n            if (maxY - window.pageYOffset > maxScrollDisplacement) {\n                maxY = window.pageYOffset + maxScrollDisplacement\n            }\n\n            let targetY = window.pageYOffset - (window.innerHeight - elemBottom)\n\n            if (targetY > maxY) {\n                targetY = maxY\n            }\n\n            window.scrollTo(0, targetY)\n        }\n    }\n}\n\n\nexport default TributeRange;\n","// Thanks to https://github.com/mattyork/fuzzy\nclass TributeSearch {\n    constructor(tribute) {\n        this.tribute = tribute\n        this.tribute.search = this\n    }\n\n    simpleFilter(pattern, array) {\n        return array.filter(string => {\n            return this.test(pattern, string)\n        })\n    }\n\n    test(pattern, string) {\n        return this.match(pattern, string) !== null\n    }\n\n    match(pattern, string, opts) {\n        opts = opts || {}\n        let patternIdx = 0,\n            result = [],\n            len = string.length,\n            totalScore = 0,\n            currScore = 0,\n            pre = opts.pre || '',\n            post = opts.post || '',\n            compareString = opts.caseSensitive && string || string.toLowerCase(),\n            ch, compareChar\n\n        if (opts.skip) {\n            return {rendered: string, score: 0}\n        }\n\n        pattern = opts.caseSensitive && pattern || pattern.toLowerCase()\n\n        let patternCache = this.traverse(compareString, pattern, 0, 0, [])\n        if (!patternCache) {\n            return null\n        }\n        return {\n            rendered: this.render(string, patternCache.cache, pre, post),\n            score: patternCache.score\n        }\n    }\n\n    traverse(string, pattern, stringIndex, patternIndex, patternCache) {\n        if (this.tribute.autocompleteSeparator) {\n            // if the pattern search at end\n            pattern = pattern.split(this.tribute.autocompleteSeparator).splice(-1)[0];\n        }\n\n        if (pattern.length === patternIndex) {\n\n            // calculate score and copy the cache containing the indices where it's found\n            return {\n                score: this.calculateScore(patternCache),\n                cache: patternCache.slice()\n            }\n        }\n\n        // if string at end or remaining pattern > remaining string\n        if (string.length === stringIndex || pattern.length - patternIndex > string.length - stringIndex) {\n            return undefined\n        }\n\n        let c = pattern[patternIndex]\n        let index = string.indexOf(c, stringIndex)\n        let best, temp\n\n        while (index > -1) {\n            patternCache.push(index)\n            temp = this.traverse(string, pattern, index + 1, patternIndex + 1, patternCache)\n            patternCache.pop()\n\n            // if downstream traversal failed, return best answer so far\n            if (!temp) {\n                return best\n            }\n\n            if (!best || best.score < temp.score) {\n                best = temp\n            }\n\n            index = string.indexOf(c, index + 1)\n        }\n\n        return best\n    }\n\n    calculateScore(patternCache) {\n        let score = 0\n        let temp = 1\n\n        patternCache.forEach((index, i) => {\n            if (i > 0) {\n                if (patternCache[i - 1] + 1 === index) {\n                    temp += temp + 1\n                }\n                else {\n                    temp = 1\n                }\n            }\n\n            score += temp\n        })\n\n        return score\n    }\n\n    render(string, indices, pre, post) {\n        var rendered = string.substring(0, indices[0])\n\n        indices.forEach((index, i) => {\n            rendered += pre + string[index] + post +\n                string.substring(index + 1, (indices[i + 1]) ? indices[i + 1] : string.length)\n        })\n\n        return rendered\n    }\n\n    filter(pattern, arr, opts) {\n        opts = opts || {}\n        return arr\n            .reduce((prev, element, idx, arr) => {\n                let str = element\n\n                if (opts.extract) {\n                    str = opts.extract(element)\n\n                    if (!str) { // take care of undefineds / nulls / etc.\n                        str = ''\n                    }\n                }\n\n                let rendered = this.match(pattern, str, opts)\n\n                if (rendered != null) {\n                    prev[prev.length] = {\n                        string: rendered.rendered,\n                        score: rendered.score,\n                        index: idx,\n                        original: element\n                    }\n                }\n\n                return prev\n            }, [])\n\n        .sort((a, b) => {\n            let compare = b.score - a.score\n            if (compare) return compare\n            return a.index - b.index\n        })\n    }\n}\n\nexport default TributeSearch;\n","import \"./utils\";\nimport TributeEvents from \"./TributeEvents\";\nimport TributeMenuEvents from \"./TributeMenuEvents\";\nimport TributeRange from \"./TributeRange\";\nimport TributeSearch from \"./TributeSearch\";\n\nclass Tribute {\n  constructor({\n    values = null,\n    loadingItemTemplate = null,\n    iframe = null,\n    selectClass = \"highlight\",\n    containerClass = \"tribute-container\",\n    itemClass = \"\",\n    trigger = \"@\",\n    autocompleteMode = false,\n    autocompleteSeparator = null,\n    selectTemplate = null,\n    menuItemTemplate = null,\n    lookup = \"key\",\n    fillAttr = \"value\",\n    collection = null,\n    menuContainer = null,\n    noMatchTemplate = null,\n    requireLeadingSpace = true,\n    allowSpaces = false,\n    replaceTextSuffix = null,\n    positionMenu = true,\n    spaceSelectsMatch = false,\n    searchOpts = {},\n    menuItemLimit = null,\n    menuShowMinLength = 0\n  }) {\n    this.autocompleteMode = autocompleteMode;\n    this.autocompleteSeparator = autocompleteSeparator;\n    this.menuSelected = 0;\n    this.current = {};\n    this.inputEvent = false;\n    this.isActive = false;\n    this.menuContainer = menuContainer;\n    this.allowSpaces = allowSpaces;\n    this.replaceTextSuffix = replaceTextSuffix;\n    this.positionMenu = positionMenu;\n    this.hasTrailingSpace = false;\n    this.spaceSelectsMatch = spaceSelectsMatch;\n\n    if (this.autocompleteMode) {\n      trigger = \"\";\n      allowSpaces = false;\n    }\n\n    if (values) {\n      this.collection = [\n        {\n          // symbol that starts the lookup\n          trigger: trigger,\n\n          // is it wrapped in an iframe\n          iframe: iframe,\n\n          // class applied to selected item\n          selectClass: selectClass,\n\n          // class applied to the Container\n          containerClass: containerClass,\n\n          // class applied to each item\n          itemClass: itemClass,\n\n          // function called on select that retuns the content to insert\n          selectTemplate: (\n            selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n\n          // function called that returns content for an item\n          menuItemTemplate: (\n            menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n\n          // column to search against in the object\n          lookup: lookup,\n\n          // column that contains the content to insert by default\n          fillAttr: fillAttr,\n\n          // array of objects or a function returning an array of objects\n          values: values,\n\n          // useful for when values is an async function\n          loadingItemTemplate: loadingItemTemplate,\n\n          requireLeadingSpace: requireLeadingSpace,\n\n          searchOpts: searchOpts,\n\n          menuItemLimit: menuItemLimit,\n\n          menuShowMinLength: menuShowMinLength\n        }\n      ];\n    } else if (collection) {\n      if (this.autocompleteMode)\n        console.warn(\n          \"Tribute in autocomplete mode does not work for collections\"\n        );\n      this.collection = collection.map(item => {\n        return {\n          trigger: item.trigger || trigger,\n          iframe: item.iframe || iframe,\n          selectClass: item.selectClass || selectClass,\n          containerClass: item.containerClass || containerClass,\n          itemClass: item.itemClass || itemClass,\n          selectTemplate: (\n            item.selectTemplate || Tribute.defaultSelectTemplate\n          ).bind(this),\n          menuItemTemplate: (\n            item.menuItemTemplate || Tribute.defaultMenuItemTemplate\n          ).bind(this),\n          // function called when menu is empty, disables hiding of menu.\n          noMatchTemplate: (t => {\n            if (typeof t === \"string\") {\n              if (t.trim() === \"\") return null;\n              return t;\n            }\n            if (typeof t === \"function\") {\n              return t.bind(this);\n            }\n\n            return (\n              noMatchTemplate ||\n              function() {\n                return \"<li>No Match Found!</li>\";\n              }.bind(this)\n            );\n          })(noMatchTemplate),\n          lookup: item.lookup || lookup,\n          fillAttr: item.fillAttr || fillAttr,\n          values: item.values,\n          loadingItemTemplate: item.loadingItemTemplate,\n          requireLeadingSpace: item.requireLeadingSpace,\n          searchOpts: item.searchOpts || searchOpts,\n          menuItemLimit: item.menuItemLimit || menuItemLimit,\n          menuShowMinLength: item.menuShowMinLength || menuShowMinLength\n        };\n      });\n    } else {\n      throw new Error(\"[Tribute] No collection specified.\");\n    }\n\n    new TributeRange(this);\n    new TributeEvents(this);\n    new TributeMenuEvents(this);\n    new TributeSearch(this);\n  }\n\n  get isActive() {\n    return this._isActive;\n  }\n\n  set isActive(val) {\n    if (this._isActive != val) {\n      this._isActive = val;\n      if (this.current.element) {\n        let noMatchEvent = new CustomEvent(`tribute-active-${val}`);\n        this.current.element.dispatchEvent(noMatchEvent);\n      }\n    }\n  }\n\n  static defaultSelectTemplate(item) {\n    if (typeof item === \"undefined\")\n      return `${this.current.collection.trigger}${this.current.mentionText}`;\n    if (this.range.isContentEditable(this.current.element)) {\n      return (\n        '<span class=\"tribute-mention\">' +\n        (this.current.collection.trigger +\n          item.original[this.current.collection.fillAttr]) +\n        \"</span>\"\n      );\n    }\n\n    return (\n      this.current.collection.trigger +\n      item.original[this.current.collection.fillAttr]\n    );\n  }\n\n  static defaultMenuItemTemplate(matchItem) {\n    return matchItem.string;\n  }\n\n  static inputTypes() {\n    return [\"TEXTAREA\", \"INPUT\"];\n  }\n\n  triggers() {\n    return this.collection.map(config => {\n      return config.trigger;\n    });\n  }\n\n  attach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._attach(el[i]);\n      }\n    } else {\n      this._attach(el);\n    }\n  }\n\n  _attach(el) {\n    if (el.hasAttribute(\"data-tribute\")) {\n      console.warn(\"Tribute was already bound to \" + el.nodeName);\n    }\n\n    this.ensureEditable(el);\n    this.events.bind(el);\n    el.setAttribute(\"data-tribute\", true);\n  }\n\n  ensureEditable(element) {\n    if (Tribute.inputTypes().indexOf(element.nodeName) === -1) {\n      if (element.contentEditable) {\n        element.contentEditable = true;\n      } else {\n        throw new Error(\"[Tribute] Cannot bind to \" + element.nodeName);\n      }\n    }\n  }\n\n  createMenu(containerClass) {\n    let wrapper = this.range.getDocument().createElement(\"div\"),\n      ul = this.range.getDocument().createElement(\"ul\");\n    wrapper.className = containerClass;\n    wrapper.appendChild(ul);\n\n    if (this.menuContainer) {\n      return this.menuContainer.appendChild(wrapper);\n    }\n\n    return this.range.getDocument().body.appendChild(wrapper);\n  }\n\n  showMenuFor(element, scrollTo) {\n    this.currentMentionTextSnapshot = this.current.mentionText;\n\n    // create the menu if it doesn't exist.\n    if (!this.menu) {\n      this.menu = this.createMenu(this.current.collection.containerClass);\n      element.tributeMenu = this.menu;\n      this.menuEvents.bind(this.menu);\n    }\n\n    this.isActive = true;\n    this.menuSelected = 0;\n    window.setTimeout(() => {\n      this.menu.scrollTop = 0;\n    },0)\n\n    if (!this.current.mentionText) {\n      this.current.mentionText = \"\";\n    }\n\n    const processValues = values => {\n      // Tribute may not be active any more by the time the value callback returns\n      if (!this.isActive) {\n        return;\n      }\n\n      let items = this.search.filter(this.current.mentionText, values, {\n        pre: this.current.collection.searchOpts.pre || \"<span>\",\n        post: this.current.collection.searchOpts.post || \"</span>\",\n        skip: this.current.collection.searchOpts.skip,\n        extract: el => {\n          if (typeof this.current.collection.lookup === \"string\") {\n            return el[this.current.collection.lookup];\n          } else if (typeof this.current.collection.lookup === \"function\") {\n            return this.current.collection.lookup(el, this.current.mentionText);\n          } else {\n            throw new Error(\n              \"Invalid lookup attribute, lookup must be string or function.\"\n            );\n          }\n        }\n      });\n\n      if (this.current.collection.menuItemLimit) {\n        items = items.slice(0, this.current.collection.menuItemLimit);\n      }\n\n      this.current.filteredItems = items;\n\n      let ul = this.menu.querySelector(\"ul\");\n\n      if (!items.length) {\n        let noMatchEvent = new CustomEvent(\"tribute-no-match\", {\n          detail: this.menu\n        });\n        this.current.element.dispatchEvent(noMatchEvent);\n        if (\n          (typeof this.current.collection.noMatchTemplate === \"function\" &&\n            !this.current.collection.noMatchTemplate()) ||\n          !this.current.collection.noMatchTemplate\n        ) {\n          this.hideMenu();\n        } else {\n          typeof this.current.collection.noMatchTemplate === \"function\"\n            ? (ul.innerHTML = this.current.collection.noMatchTemplate())\n            : (ul.innerHTML = this.current.collection.noMatchTemplate);\n            this.range.positionMenuAtCaret(scrollTo);\n        }\n\n        return;\n      }\n\n      ul.innerHTML = \"\";\n      let fragment = this.range.getDocument().createDocumentFragment();\n\n      this.menuSelected = items.findIndex(item => item.original.disabled !== true);\n\n      items.forEach((item, index) => {\n        let li = this.range.getDocument().createElement(\"li\");\n        li.setAttribute(\"data-index\", index);\n        if (item.original.disabled) li.setAttribute(\"data-disabled\",\"true\");\n        li.className = this.current.collection.itemClass;\n        li.addEventListener(\"mousemove\", e => {\n          let [li, index] = this._findLiTarget(e.target);\n          if (e.movementY !== 0) {\n            this.events.setActiveLi(index);\n          }\n        });\n        if (this.menuSelected === index) {\n          li.classList.add(this.current.collection.selectClass);\n        }\n        li.innerHTML = this.current.collection.menuItemTemplate(item);\n        fragment.appendChild(li);\n      });\n      ul.appendChild(fragment);\n\n      this.range.positionMenuAtCaret(scrollTo);\n    };\n\n    if (typeof this.current.collection.values === \"function\") {\n      if (this.current.collection.loadingItemTemplate) {\n        this.menu.querySelector(\"ul\").innerHTML = this.current.collection.loadingItemTemplate;\n        this.range.positionMenuAtCaret(scrollTo);\n      }\n\n      this.current.collection.values(this.current.mentionText, processValues);\n    } else {\n      processValues(this.current.collection.values);\n    }\n  }\n\n  _findLiTarget(el) {\n    if (!el) return [];\n    const index = el.getAttribute(\"data-index\");\n    return !index ? this._findLiTarget(el.parentNode) : [el, index];\n  }\n\n  showMenuForCollection(element, collectionIndex) {\n\n    if (element !== document.activeElement) {\n      this.placeCaretAtEnd(element);\n    }\n\n    this.current.collection = this.collection[collectionIndex || 0];\n    this.current.externalTrigger = true;\n    this.current.element = element;\n\n    if (element.isContentEditable)\n      this.insertTextAtCursor(this.current.collection.trigger);\n    else this.insertAtCaret(element, this.current.collection.trigger);\n\n    this.showMenuFor(element);\n  }\n\n  // TODO: make sure this works for inputs/textareas\n  placeCaretAtEnd(el) {\n    el.focus();\n    if (\n      typeof window.getSelection != \"undefined\" &&\n      typeof document.createRange != \"undefined\"\n    ) {\n      var range = document.createRange();\n      range.selectNodeContents(el);\n      range.collapse(false);\n      var sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (typeof document.body.createTextRange != \"undefined\") {\n      var textRange = document.body.createTextRange();\n      textRange.moveToElementText(el);\n      textRange.collapse(false);\n      textRange.select();\n    }\n  }\n\n  // for contenteditable\n  insertTextAtCursor(text) {\n    var sel, range, html;\n    sel = window.getSelection();\n    range = sel.getRangeAt(0);\n    range.deleteContents();\n    var textNode = document.createTextNode(text);\n    range.insertNode(textNode);\n    range.selectNodeContents(textNode);\n    range.collapse(false);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n\n  // for regular inputs\n  insertAtCaret(textarea, text) {\n    var scrollPos = textarea.scrollTop;\n    var caretPos = textarea.selectionStart;\n\n    var front = textarea.value.substring(0, caretPos);\n    var back = textarea.value.substring(\n      textarea.selectionEnd,\n      textarea.value.length\n    );\n    textarea.value = front + text + back;\n    caretPos = caretPos + text.length;\n    textarea.selectionStart = caretPos;\n    textarea.selectionEnd = caretPos;\n    textarea.focus();\n    textarea.scrollTop = scrollPos;\n  }\n\n  hideMenu() {\n    if (this.menu) {\n      this.menu.style.cssText = \"display: none;\";\n      this.isActive = false;\n      this.menuSelected = 0;\n      this.current = {};\n    }\n  }\n\n  selectItemAtIndex(index, originalEvent) {\n    index = parseInt(index);\n    if (typeof index !== \"number\" || isNaN(index)) return;\n    let item = this.current.filteredItems[index];\n    let content = this.current.collection.selectTemplate(item);\n    if (content !== null) this.replaceText(content, originalEvent, item);\n  }\n\n  replaceText(content, originalEvent, item) {\n    this.range.replaceTriggerText(content, true, true, originalEvent, item);\n  }\n\n  _append(collection, newValues, replace) {\n    if (typeof collection.values === \"function\") {\n      throw new Error(\"Unable to append to values, as it is a function.\");\n    } else if (!replace) {\n      collection.values = collection.values.concat(newValues);\n    } else {\n      collection.values = newValues;\n    }\n  }\n\n  append(collectionIndex, newValues, replace) {\n    let index = parseInt(collectionIndex);\n    if (typeof index !== \"number\")\n      throw new Error(\"please provide an index for the collection to update.\");\n\n    let collection = this.collection[index];\n\n    this._append(collection, newValues, replace);\n  }\n\n  appendCurrent(newValues, replace) {\n    if (this.isActive) {\n      this._append(this.current.collection, newValues, replace);\n    } else {\n      throw new Error(\n        \"No active state. Please use append instead and pass an index.\"\n      );\n    }\n  }\n\n  detach(el) {\n    if (!el) {\n      throw new Error(\"[Tribute] Must pass in a DOM node or NodeList.\");\n    }\n\n    // Check if it is a jQuery collection\n    if (typeof jQuery !== \"undefined\" && el instanceof jQuery) {\n      el = el.get();\n    }\n\n    // Is el an Array/Array-like object?\n    if (\n      el.constructor === NodeList ||\n      el.constructor === HTMLCollection ||\n      el.constructor === Array\n    ) {\n      let length = el.length;\n      for (var i = 0; i < length; ++i) {\n        this._detach(el[i]);\n      }\n    } else {\n      this._detach(el);\n    }\n  }\n\n  _detach(el) {\n    this.events.unbind(el);\n    if (el.tributeMenu) {\n      this.menuEvents.unbind(el.tributeMenu);\n    }\n\n    setTimeout(() => {\n      el.removeAttribute(\"data-tribute\");\n      this.isActive = false;\n      if (el.tributeMenu) {\n        el.tributeMenu.remove();\n      }\n    });\n  }\n}\n\nexport default Tribute;\n"],"names":["Array","prototype","find","predicate","this","TypeError","value","list","Object","length","thisArg","arguments","i","call","window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","TributeEvents","tribute","events","element","boundKeydown","keydown","bind","boundKeyup","keyup","boundInput","input","addEventListener","removeEventListener","instance","shouldDeactivate","isActive","hideMenu","commandEvent","keys","forEach","o","key","keyCode","callbacks","toLowerCase","inputEvent","menu","contains","target","li","preventDefault","stopPropagation","nodeName","parentNode","getAttribute","selectItemAtIndex","current","externalTrigger","setTimeout","updateSelection","allowSpaces","hasTrailingSpace","autocompleteMode","triggerChar","getKeyCode","isNaN","trigger","triggers","charCodeAt","mentionText","collection","menuShowMinLength","showMenuFor","eventKeyPressed","el","info","range","getTriggerInfo","mentionTriggerChar","selectedPath","mentionSelectedPath","selectedOffset","mentionSelectedOffset","e","_this","collectionItem","item","enter","filteredItems","menuSelected","escape","tab","space","spaceSelectsMatch","up","count","lis","querySelectorAll","scrollTop","scrollHeight","setActiveLi","down","index","parseInt","classList","add","selectClass","liClientRect","getBoundingClientRect","menuClientRect","bottom","scrollDistance","top","remove","elem","includeMargin","height","style","currentStyle","getComputedStyle","parseFloat","marginTop","marginBottom","TributeMenuEvents","menuEvents","menuClickEvent","click","menuContainerScrollEvent","debounce","windowResizeEvent","getDocument","menuContainer","func","wait","immediate","timeout","context","_this2","args","callNow","clearTimeout","apply","TributeRange","iframe","contentWindow","scrollTo","coordinates","positionMenu","cssText","isContentEditable","getContentEditableCaretPosition","mentionPosition","getTextAreaOrInputUnderlinePosition","left","right","maxHeight","maxWidth","position","scrollIntoView","targetElement","path","offset","childNodes","nextSibling","previousSibling","sel","getWindowSelection","createRange","setStart","setEnd","collapse","removeAllRanges","error","addRange","focus","text","requireLeadingSpace","originalEvent","replaceEvent","replaceTextSuffix","endPos","pasteHtml","myField","textSuffix","startPos","substring","selectionStart","selectionEnd","dispatchEvent","html","anchorNode","deleteContents","createElement","innerHTML","node","lastNode","frag","createDocumentFragment","firstChild","appendChild","insertNode","cloneRange","setStartAfter","getSelection","ctx","selected","ce","contentEditable","getNodePositionInParent","push","reverse","getRangeAt","startOffset","selectedElem","workingNodeContent","textContent","selectStartOffset","textComponent","wordsArray","replace","autocompleteSeparator","split","trim","menuAlreadyActive","isAutocomplete","selectionInfo","getContentEditableSelectedPath","effectiveRange","getTextPrecedingCurrentSelection","lastWordOfEffectiveRange","getLastWordInText","mentionSelectedElement","mostRecentTriggerCharPos","config","c","idx","lastIndexWithLeadingSpace","lastIndexOf","test","currentTriggerSnippet","firstSnippetChar","leadingSpace","regex","str","reversedStr","join","cidx","len","firstChar","match","triggerIdx","menuDimensions","windowWidth","innerWidth","windowHeight","innerHeight","doc","documentElement","windowLeft","pageXOffset","scrollLeft","clientLeft","windowTop","pageYOffset","clientTop","menuTop","menuRight","width","menuBottom","menuLeft","Math","floor","ceil","dimensions","offsetWidth","offsetHeight","flipped","div","id","body","computed","whiteSpace","wordWrap","visibility","prop","span0","span","span2","rect","spanRect","removeChild","getFixedCoordinatesRelativeToRect","selectedNodePosition","getMenuDimensions","availableSpaceOnTop","availableSpaceOnBottom","availableSpaceOnLeft","availableSpaceOnRight","clientRect","elemTop","elemBottom","maxY","targetY","TributeSearch","search","pattern","array","filter","string","opts","pre","post","compareString","caseSensitive","skip","rendered","score","patternCache","traverse","render","cache","stringIndex","patternIndex","splice","calculateScore","slice","best","temp","indexOf","pop","indices","arr","reduce","prev","extract","original","sort","a","b","compare","t","values","loadingItemTemplate","containerClass","itemClass","selectTemplate","menuItemTemplate","lookup","fillAttr","noMatchTemplate","searchOpts","menuItemLimit","Tribute","defaultSelectTemplate","defaultMenuItemTemplate","Error","console","warn","map","jQuery","get","constructor","NodeList","HTMLCollection","_attach","hasAttribute","ensureEditable","setAttribute","inputTypes","wrapper","ul","className","currentMentionTextSnapshot","createMenu","tributeMenu","processValues","items","querySelector","noMatchEvent","positionMenuAtCaret","fragment","findIndex","disabled","_findLiTarget","movementY","collectionIndex","activeElement","placeCaretAtEnd","insertTextAtCursor","insertAtCaret","selectNodeContents","createTextRange","textRange","moveToElementText","select","textNode","createTextNode","textarea","scrollPos","caretPos","front","back","content","replaceText","replaceTriggerText","newValues","concat","_append","_detach","unbind","removeAttribute","_this3","_isActive","val","matchItem"],"mappings":"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"}